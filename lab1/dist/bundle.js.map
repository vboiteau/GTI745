{"version":3,"sources":["webpack:///webpack/bootstrap 63ed3ac198b9772858c1","webpack:///./src/main.js","webpack:///./src/Vector2D.js","webpack:///./src/Draw2D.js","webpack:///./src/Box2D.js"],"names":["RadialMenu","label","isEnabled","itemID","N","i","selectedItem","x0","y0","mouseX","mouseY","isVisible","CENTRAL_ITEM","NORTH","NORTH_EAST","EAST","SOUTH_EAST","SOUTH","SOUTH_WEST","WEST","NORTH_WEST","FOREGROUND_1","FOREGROUND_2","BACKGROUND","MENU_ALPHA","radiusOfNeutralZone","textHeight","marginAroundText","marginBetweenItems","prototype","setItemLabelAndID","index","s","id","setItemLabel","getItemID","setEnabledByID","flag","isItemHilited","console","assert","getSelection","getIDOfSelection","pressEvent","x","y","releaseEvent","moveEvent","dragEvent","dx","dy","radius","Math","sqrt","newlySelectedItem","theta","asin","PI","floor","length","minDifference","itemWithMinDifference","candidateItem","candidateItemTheta","candidateDifference","abs","drawMenuItems","draw2","drawOnlyHilitedItem","drawUsingPieStyle","radiusOfPie","fg1","fg2","bg","alpha","setFillColor","fillCircle","setStrokeColor","drawCircle","heightOfItem","radiusPrime","SQRT2","cos","sin","stringWidth","widthOfItem","otherStringWidth","fillRect","drawRect","drawString","draw","ControlMenu","isInMenuingMode","call","returnValue","distanceSquared","normSquared","menuRadius","Stroke","points","boundingRectangle","isBoundingRectangleDirty","pushPoint","q","push","getBoundingRectangle","clear","boundPoints","isContainedInRectangle","rectangle","containsBox","isContainedInLassoPolygon","polygonPoints","isPointInsidePolygon","translate","v","p","copy","sum","rotate","angle","center","sine","cosine","deltaX","deltaY","new_x","new_y","drawPolyline","Drawing","strokes","pushStroke","boundBox","canvas","document","getElementById","drawing","radialMenu","controlMenu","selectedStrokes","previousMouseX","previousMouseY","drag_start_x","drag_start_y","mouseHistory","zoomFactorPerPixelDragged","window","showMouseCoordinates","TOOL_MODE_PENCIL","TOOL_MODE_RECT_SELECT","TOOL_MODE_MOVE_SELECTION","NUM_TOOL_MODES","currentToolMode","DRAG_MODE_NONE","DRAG_MODE_TRANSLATE","DRAG_MODE_ZOOM","DRAG_MODE_TOOL","currentDragMode","CONTROL_NONE","CONTROL_PENCIL","CONTROL_RECT_SELECT","CONTROL_MOVE_SELECTION","CONTROL_TRANSLATE","CONTROL_ZOOM","redraw","setFontHeight","setCoordinateSystemToWorldSpaceUnits","r","min","width","height","setCoordinateSystemToPixels","x_world","convertPixelsToWorldSpaceUnitsX","y_world","convertPixelsToWorldSpaceUnitsY","parseFloat","toFixed","BUTTON_LEFT","BUTTON_MIDDLE","BUTTON_RIGHT","BUTTONS_BIT_LEFT","BUTTONS_BIT_MIDDLE","BUTTONS_BIT_RIGHT","mouseDownHandler","canvas_rectangle","getBoundingClientRect","e","clientX","left","clientY","top","button","shiftKey","ctrlKey","mouseUpHandler","setToolMode","newStroke","convertPixelsToWorldSpaceUnits","selectedRectangle","mouseMoveHandler","vector","diff","forEach","stroke","zoomIn","pow","addEventListener","oncontextmenu","toolMode","updateRadioButtons","idString","checked","frameAllButtonHandler","frame","deleteSelectionButtonHandler","j","indexOf","splice","deleteAllButtonHandler","Vector2D","other","norm","k","vector1","vector2","factor","reduce","centroid","point","Object","assign","centerX","centerY","queryPoint","polygon","cursorPoint","previousPoint","input","cross","o","a","b","sort","lower","lowerInProgress","pop","upper","upperInProgress","inputPoints","marginThickness","computeExpandedPolygonForOnePoint","computeExpandedPolygonForTwoPoint","computeExpandedPolygonForMultiPoints","point0","point1","vector0","multiply","normalize","negate","expandedPolygon","nextPoint","previousVector","nextVector","pixels","world","Draw2D","canvasContext","getContext","canvasWidth_pixels","canvasHeight_pixels","offsetXPixels","offsetYPixels","scaleFactorInWorldSpaceUnitsPerPixel","setFont","font","coordinateSystem","PIXELS","fontName","fontHeight","parseInt","match","toString","xPixels","yPixels","pointPixels","xWorld","yWorld","pointWorld","deltaXPixels","deltaYPixels","zoomFactor","centerXPixels","centerYPixels","aOld","bOld","aNew","bNew","M1","average","M2","translation","vector0Length","vector1Length","scaleFactor","originalRect","expand","isEmpty","diagonal","rect","max","oldCenter","WORLD","red","green","blue","strokeStyle","fillStyle","lw","lineWidth","x1","y1","x2","y2","contextedDrawLine","convertWorldSpaceUnitsToPixelsX","convertWorldSpaceUnitsToPixelsY","beginPath","moveTo","lineTo","unsignedX","unsignedY","unsignedWidth","unsignedHeight","isFilled","getRectSignedCoords","contextedDrawRect","strokeRect","w","h","xCenter","yCenter","contextedDrawCircle","arc","fill","isClosed","closePath","measureText","fillText","Box2D","vectorMin","vectorMax","boundPoint","box"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 63ed3ac198b9772858c1","import Vector2D from './Vector2D';\nimport Box2D from './Box2D';\nimport Draw2D from './Draw2D'\n// ============================================================\n// A radial popup menu.\n// To create a new instance, use the new keyword:\n//    var rm = new RadialMenu();\n// ============================================================\n\nfunction RadialMenu() {\n    // Each menu item has a corresponding ``label'' string.\n    // If a given label string is empty (\"\"),\n    // then there is no menu item displayed for it.\n    // In addition, the client can temporarily deactivate\n    // an existing menu item by setting its ``isEnabled'' flag to false.\n    this.label = []; // array of strings, with index ranging from 0 to N\n    this.isEnabled = []; // array of boolean, with index ranging from 0 to N\n\n    // Each menu item also has a (normally distinct) ID number.\n    // These are useful for causing.multiplyiple items to hilite together:\n    // whenever the user drags over a given item,\n    // it and all other items with the same ID hilite together.\n    // This is intended for cases where there are redundant menu items\n    // that map to the same function in the client's code.\n    this.itemID = []; // array of integers, with index ranging from 0 to N\n\n    const N = 8;\n    for (let i = 0; i <= N; ++i) {\n        this.label[i] = '';\n        this.isEnabled[i] = true;\n\n        // Give every item a distinct ID.\n        this.itemID[i] = i;\n    }\n\n    this.selectedItem = 0; // an integer in the range [CENTRAL_ITEM,N]\n\n    // pixel coordinates of center of menu\n    this.x0 = 0;\n    this.y0 = 0;\n\n    // pixel coordinates of current mouse position\n    this.mouseX = 0;\n    this.mouseY = 0;\n\n    this.isVisible = false;\n}\n\n// The radial menu has a central menu item (with index 0)\n// and up to 8 surrounding menu items\n// (with indices 1 through 8, numbered clockwise,\n// with 1 for North, 2 for North-East, ..., 8 for North-West).\nRadialMenu.CENTRAL_ITEM = 0;\nRadialMenu.NORTH = 1;\nRadialMenu.NORTH_EAST = 2;\nRadialMenu.EAST = 3;\nRadialMenu.SOUTH_EAST = 4;\nRadialMenu.SOUTH = 5;\nRadialMenu.SOUTH_WEST = 6;\nRadialMenu.WEST = 7;\nRadialMenu.NORTH_WEST = 8;\nRadialMenu.N = 8;\nRadialMenu.FOREGROUND_1 = 0;\nRadialMenu.FOREGROUND_2 = 127;\nRadialMenu.BACKGROUND = 255;\nRadialMenu.MENU_ALPHA = 0.6;\nRadialMenu.radiusOfNeutralZone = 10;\nRadialMenu.textHeight = 20;\nRadialMenu.marginAroundText = 6;\nRadialMenu.marginBetweenItems = 6;\n\nRadialMenu.prototype = {\n\n    setItemLabelAndID(index, /* string */ s, id) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            this.label[index] = s;\n            this.itemID[index] = id;\n        }\n    },\n    setItemLabel(index, /* string */ s) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            this.label[index] = s;\n        }\n    },\n    getItemID(index) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            return this.itemID[index];\n        }\n        return -1;\n    },\n\n    setEnabledByID(/* boolean */ flag, id) {\n        for (let i = 0; i <= RadialMenu.N; ++i) {\n            if (this.itemID[i] === id) {\n                this.isEnabled[i] = flag;\n            }\n        }\n    },\n\n    // For internal use only.\n    isItemHilited(index) {\n        console.assert(index >= 0 && index <= RadialMenu.N);\n        return this.itemID[index] === this.itemID[this.selectedItem];\n    },\n\n    // The client typically calls this after an interaction with the menu\n    // is complete, to find out what the user selected.\n    // Returns an index in the range [CENTRAL_ITEM,N]\n    getSelection() { return this.selectedItem; },\n\n    getIDOfSelection() { return this.getItemID(this.selectedItem); },\n\n    // The below methods, that handle mouse events, return true if the client should redraw.\n    pressEvent(x, y) {\n        this.x0 = this.mouseX = x;\n        this.y0 = this.mouseY = y;\n        this.selectedItem = RadialMenu.CENTRAL_ITEM;\n        this.isVisible = true;\n        return true;\n    },\n    releaseEvent(x, y) {\n        if (this.isVisible) {\n            this.isVisible = false;\n            return true;\n        }\n        return false;\n    },\n    moveEvent(x, y) {\n        if (!this.isVisible) { return false; }\n        // make the center of the menu follow the cursor\n        this.x0 = this.mouseX = x;\n        this.y0 = this.mouseY = y;\n        return true;\n    },\n    dragEvent(x, y) {\n        if (!this.isVisible) { return false; }\n\n        this.mouseX = x;\n        this.mouseY = y;\n        const dx = this.mouseX - this.x0;\n        const dy = this.mouseY - this.y0;\n        const radius = Math.sqrt(dx * dx + dy * dy);\n\n        let newlySelectedItem = RadialMenu.CENTRAL_ITEM;\n\n        if (radius > RadialMenu.radiusOfNeutralZone) {\n            let theta = Math.asin(dy / radius);\n            if (dx < 0) theta = Math.PI - theta;\n\n            // theta is now relative to the +x axis, which points right,\n            // and increases clockwise (because y+ points down).\n            // If we added pi/2 radians, it would be relative to the -y\n            // axis (which points up).\n            // However, what we really want is for it to be relative to\n            // the radial line that divides item 1 from item 8.\n            // So we must add pi/2 + pi/8 radians.\n\n            theta += 5 * Math.PI / 8;\n\n            // Ensure it's in [0,2*pi]\n            console.assert(theta > 0);\n            if (theta > 2 * Math.PI) theta -= 2 * Math.PI;\n\n            newlySelectedItem = 1 + Math.floor(theta / (Math.PI / 4));\n            console.assert(newlySelectedItem >= 1 && newlySelectedItem <= RadialMenu.N);\n\n            if (this.label[newlySelectedItem].length === 0 || !this.isEnabled[newlySelectedItem]) {\n                // loop over all items, looking for the closest one\n                let minDifference = 4 * Math.PI;\n                let itemWithMinDifference = RadialMenu.CENTRAL_ITEM;\n                for (let candidateItem = 1; candidateItem <= RadialMenu.N; ++candidateItem) {\n                    if (this.label[candidateItem].length > 0 && this.isEnabled[candidateItem]) {\n                        const candidateItemTheta = (candidateItem - 1) * (Math.PI / 4) + Math.PI / 8;\n                        let candidateDifference = Math.abs(candidateItemTheta - theta);\n                        if (candidateDifference > Math.PI) { candidateDifference = 2 * Math.PI - candidateDifference; }\n                        if (candidateDifference < minDifference) {\n                            minDifference = candidateDifference;\n                            itemWithMinDifference = candidateItem;\n                        }\n                    }\n                }\n                newlySelectedItem = itemWithMinDifference;\n            }\n        }\n\n        if (newlySelectedItem !== this.selectedItem) {\n            this.selectedItem = newlySelectedItem;\n            return true;\n        }\n\n        return false;\n    },\n\n    drawMenuItems(\n        draw2,\n        drawOnlyHilitedItem, // boolean; if false, all menu items are drawn\n        drawUsingPieStyle, // boolean\n        radiusOfPie // in pixels; only used if ``drawUsingPieStyle'' is true\n    ) {\n        const fg1 = RadialMenu.FOREGROUND_1;\n        const fg2 = RadialMenu.FOREGROUND_2;\n        const bg = RadialMenu.BACKGROUND;\n        const alpha = RadialMenu.MENU_ALPHA;\n        const N = RadialMenu.N;\n\n        if (drawUsingPieStyle) {\n            draw2.setFillColor(fg2, fg2, fg2, alpha);\n            draw2.fillCircle(this.x0, this.y0, radiusOfPie);\n        }\n\n        if (this.isItemHilited(RadialMenu.CENTRAL_ITEM)) { draw2.setFillColor(fg1, fg1, fg1, alpha); } else { draw2.setFillColor(bg, bg, bg, alpha); }\n        draw2.fillCircle(this.x0, this.y0, RadialMenu.radiusOfNeutralZone);\n        if (!this.isItemHilited(RadialMenu.CENTRAL_ITEM)) { draw2.setStrokeColor(fg1, fg1, fg1); } else { draw2.setStrokeColor(bg, bg, bg); }\n        draw2.drawCircle(this.x0, this.y0, RadialMenu.radiusOfNeutralZone);\n\n\n        /*\n\t\t\tBelow we have the upper right quadrant of the radial menu.\n\t\t\t\t+---------+              \\\n\t\t\t\t| item 1  |               ) heightOfItems\n\t\t\t\t+---------+              /\n\t\t\t\t     .                    ) marginBetweenItems\n\t\t\t\t     . +---------+       \\\n\t\t\t\t     . | item 2  |        ) heightOfItems\n\t\t\t\t     . +---------+       /\n\t\t\t\t     . .                  ) marginBetweenItems\n\t\t\t\t     ..     +---------+  \\\n\t\t\t\t     o......| item 3  |   ) heightOfItems\n\t\t\t\t            +---------+  /\n\t\t\tLet r be the distance from the menu's center \"o\" to the center of item 1,\n\t\t\tand also the distance from \"o\" to the center of item 3.\n\t\t\tFrom the picture, we have\n\t\t\t\tr == heightOfItems / 2 + marginBetweenItems + heightOfItems\n\t\t\t\t     + marginBetweenItems + heightOfItems / 2\n\t\t\t\t  == 2 * ( heightOfItems + marginBetweenItems )\n\t\t\tLet r' be the distance from \"o\" to the center of item 2.\n\t\t\tThis distance is measured along a line that slopes at 45 degrees.\n\t\t\tHence\n\t\t\t\tr'/sqrt(2) == heightOfItems / 2 + marginBetweenItems\n\t\t\t\t              + heightOfItems / 2\n\t\t\t\tr' == sqrt(2) * ( heightOfItems + marginBetweenItems )\n\t\t\t\t   == r / sqrt(2)\n\t\t*/\n        const heightOfItem = RadialMenu.textHeight + 2 * RadialMenu.marginAroundText;\n        const radius = 2 * (heightOfItem + RadialMenu.marginBetweenItems);\n        const radiusPrime = radius / Math.SQRT2;\n\n        for (let i = 1; i <= N; ++i) {\n            if (this.label[i].length > 0 && this.isEnabled[i]) {\n                const theta = (i - 1) * Math.PI / 4 - Math.PI / 2;\n                // compute center of ith label\n                let x = ((i % 2) === 1 ? radius : radiusPrime) * Math.cos(theta) + this.x0;\n                let y = ((i % 2) === 1 ? radius : radiusPrime) * Math.sin(theta) + this.y0;\n\n                if (i === 1 && this.label[2].length === 0 && this.label[8].length === 0) {\n                    y = -radius / 2 + this.y0;\n                } else if (i === 5 && this.label[4].length === 0 && this.label[6].length === 0) {\n                    y = radius / 2 + this.y0;\n                }\n\n                const stringWidth = draw2.stringWidth(this.label[i]);\n                let widthOfItem = stringWidth + 2 * RadialMenu.marginAroundText;\n\n                // We want items that appear side-by-side to have the same width,\n                // so that the menu is symmetrical about a vertical axis.\n                if (i !== 1 && i !== 5 && this.label[N + 2 - i].length > 0) {\n                    const otherStringWidth = draw2.stringWidth(this.label[N + 2 - i]);\n                    if (otherStringWidth > stringWidth) { widthOfItem = otherStringWidth + 2 * RadialMenu.marginAroundText; }\n                }\n\n                if (i === 2 || i === 4) {\n                    if (x - widthOfItem / 2 <= this.x0 + RadialMenu.marginBetweenItems)\n                    // item is too far to the left; shift it to the right\n                    { x = this.x0 + RadialMenu.marginBetweenItems + widthOfItem / 2; }\n                } else if (i === 3) {\n                    if (x - widthOfItem / 2 <= this.x0 + RadialMenu.radiusOfNeutralZone + RadialMenu.marginBetweenItems)\n                    // item is too far to the left; shift it to the right\n                    { x = this.x0 + RadialMenu.radiusOfNeutralZone + RadialMenu.marginBetweenItems + widthOfItem / 2; }\n                } else if (i === 6 || i === 8) {\n                    if (x + widthOfItem / 2 >= this.x0 - RadialMenu.marginBetweenItems)\n                    // item is too far to the right; shift it to the left\n                    { x = this.x0 - RadialMenu.marginBetweenItems - widthOfItem / 2; }\n                } else if (i === 7) {\n                    if (x + widthOfItem / 2 >= this.x0 - RadialMenu.radiusOfNeutralZone - RadialMenu.marginBetweenItems)\n                    // item is too far to the right; shift it to the left\n                    { x = this.x0 - RadialMenu.radiusOfNeutralZone - RadialMenu.marginBetweenItems - widthOfItem / 2; }\n                }\n\n                if (this.isItemHilited(i)) { draw2.setFillColor(fg1, fg1, fg1, alpha); } else { draw2.setFillColor(bg, bg, bg, alpha); }\n                draw2.fillRect(\n                    x - widthOfItem / 2, y - heightOfItem / 2,\n                    widthOfItem, heightOfItem\n                );\n                if (!this.isItemHilited(i)) {\n                    draw2.setStrokeColor(fg1, fg1, fg1);\n                    draw2.setFillColor(fg1, fg1, fg1);\n                } else {\n                    draw2.setStrokeColor(bg, bg, bg);\n                    draw2.setFillColor(bg, bg, bg);\n                }\n                draw2.drawRect(\n                    x - widthOfItem / 2, y - heightOfItem / 2,\n                    widthOfItem, heightOfItem\n                );\n                draw2.drawString(\n                    x - stringWidth / 2,\n                    y + RadialMenu.textHeight / 2,\n                    this.label[i]\n                );\n            }\n        }\n    },\n\n    draw(draw2) {\n        if (!this.isVisible) { return; }\n        this.drawMenuItems(draw2, false, false, 0);\n    }\n\n};\n\n// ============================================================\n// A control menu.\n// To create a new instance, use the new keyword:\n//    var cm = new ControlMenu();\n// ============================================================\n\nfunction ControlMenu() {\n    // During drag events, when this is false,\n    // we are in parameter-control mode,\n    // and the drag events should be interpreted by the client\n    // to control the parameter that was selected by the user.\n    this.isInMenuingMode = false;\n}\nControlMenu.prototype = new RadialMenu();\nControlMenu.prototype.pressEvent = function (x, y) {\n    this.isInMenuingMode = true;\n    return RadialMenu.prototype.pressEvent.call(this, x, y);\n};\nControlMenu.prototype.dragEvent = function (x, y) {\n    if (!this.isVisible) { return false; }\n    if (this.isInMenuingMode) {\n        const returnValue = RadialMenu.prototype.dragEvent.call(this, x, y);\n        const distanceSquared = new Vector2D(x - this.x0, y - this.y0).normSquared();\n        if (distanceSquared > ControlMenu.menuRadius * ControlMenu.menuRadius) {\n            // It is time to transition from menuing mode to parameter-control mode.\n            this.isInMenuingMode = false;\n            return true;\n        }\n        return returnValue;\n    }\n    // The widget is not in menuing mode, it is in parameter-control mode,\n    // and the client is supposed to process the event.\n    return false;\n};\nControlMenu.prototype.draw = function (draw2) {\n    if (!this.isVisible) { return; }\n    this.drawMenuItems(draw2, this.isInMenuingMode, true, ControlMenu.menuRadius);\n};\n\n// static constant\nControlMenu.menuRadius = RadialMenu.radiusOfNeutralZone * 6;\n\n// ============================================================\n// Stroke objects are for storing a continuous polygonal line of ink.\n// It is made up of points in world space.\n// To create a new instance, use the new keyword:\n//    var s = new Stroke();\n// ============================================================\n\nfunction Stroke() {\n    this.points = []; // these points are in world space\n\n    this.boundingRectangle = new Box2D();\n    this.isBoundingRectangleDirty = true;\n}\nStroke.prototype = {\n    pushPoint(q) {\n        this.points.push(q);\n        this.isBoundingRectangleDirty = true;\n    },\n    getBoundingRectangle() {\n        if (this.isBoundingRectangleDirty) {\n            this.boundingRectangle.clear();\n            this.boundingRectangle.boundPoints(this.points);\n            this.isBoundingRectangleDirty = false;\n        }\n        return this.boundingRectangle;\n    },\n    isContainedInRectangle(rectangle /* an instance of Box2D */) {\n        return rectangle.containsBox(this.getBoundingRectangle());\n    },\n    isContainedInLassoPolygon(polygonPoints /* an array of Vector2D in world space */) {\n        for (let i = 0; i < this.points.length; ++i) {\n            if (!Vector2D.isPointInsidePolygon(this.points[i], polygonPoints)) { return false; }\n        }\n        return true;\n    },\n    translate(v /* an instance of Vector2D */) {\n        for (let i = 0; i < this.points.length; ++i) {\n            const p = this.points[i];\n            p.copy(Vector2D.sum(p, v));\n        }\n        this.isBoundingRectangleDirty = true;\n    },\n    rotate(angle /* in radians */, center /* instance of Vector2D, in world space */) {\n        const sine = Math.sin(angle);\n        const cosine = Math.cos(angle);\n        for (let i = 0; i < this.points.length; ++i) {\n            const p = this.points[i];\n            const deltaX = p.x - center.x;\n            const deltaY = p.y - center.y;\n            const new_x = center.x + deltaX * cosine - deltaY * sine;\n            const new_y = center.y + deltaX * sine + deltaY * cosine;\n            p.x = new_x;\n            p.y = new_y;\n        }\n        this.isBoundingRectangleDirty = true;\n    },\n    draw(draw2) {\n        draw2.drawPolyline(this.points);\n    }\n};\n\n// ============================================================\n// Drawing objects are for storing a set of Strokes.\n// To create a new instance, use the new keyword:\n//    var d = new Drawing();\n// ============================================================\n\nfunction Drawing() {\n    this.strokes = [];\n\n    this.boundingRectangle = new Box2D();\n    this.isBoundingRectangleDirty = true;\n}\nDrawing.prototype = {\n    pushStroke(s) {\n        this.strokes.push(s);\n        this.isBoundingRectangleDirty = true;\n    },\n    clear() {\n        this.strokes = [];\n        this.boundingRectangle.clear();\n    },\n    getBoundingRectangle() {\n        if (this.isBoundingRectangleDirty) {\n            this.boundingRectangle.clear();\n            for (let i = 0; i < this.strokes.length; ++i) {\n                const s = this.strokes[i];\n                this.boundingRectangle.boundBox(s.getBoundingRectangle());\n            }\n            this.isBoundingRectangleDirty = false;\n        }\n        return this.boundingRectangle;\n    },\n\n    draw(draw2) {\n        // draw2.setLineWidth( 5 );\n        for (let i = 0; i < this.strokes.length; ++i) {\n            const s = this.strokes[i];\n            s.draw(draw2);\n        }\n        // draw2.setLineWidth( 1 );\n    }\n};\n\n// ============================================================\n\nconst canvas = document.getElementById('myCanvas');\n// var canvas_context = canvas.getContext(\"2d\");\nconst draw2 = new Draw2D(canvas);\nconst drawing = new Drawing();\n\nconst radialMenu = new RadialMenu();\nconst controlMenu = new ControlMenu();\n\n// stores a subset of the strokes\nlet selectedStrokes = []; // an array of instances of Stroke\n\nlet mouseX,\n    mouseY,\n    previousMouseX,\n    previousMouseY,\n    drag_start_x,\n    drag_start_y;\nlet mouseHistory = []; // array of Vector2D in pixel space\n\nconst zoomFactorPerPixelDragged = 1.005;\n\nwindow.showMouseCoordinates = false;\n\n// The below tool modes are constants,\n// but are defined using var instead of const\n// so that they will be accessible in the definitions\n// of the input tags at the top of this file\n// (bug fix for the Edge web browser)\nconst TOOL_MODE_PENCIL = 0;\nconst TOOL_MODE_RECT_SELECT = 1;\nconst TOOL_MODE_MOVE_SELECTION = 2;\nconst NUM_TOOL_MODES = 3;\nlet currentToolMode = TOOL_MODE_PENCIL;\n\nconst DRAG_MODE_NONE = 0;\nconst DRAG_MODE_TRANSLATE = 1;\nconst DRAG_MODE_ZOOM = 2;\nconst DRAG_MODE_TOOL = 3; // in this case, the currentToolMode could be pencil, rect_select, move_selection\nlet currentDragMode = DRAG_MODE_NONE;\n\nconst CONTROL_NONE = 0;\nconst CONTROL_PENCIL = 1;\nconst CONTROL_RECT_SELECT = 2;\nconst CONTROL_MOVE_SELECTION = 3;\nconst CONTROL_TRANSLATE = 4;\nconst CONTROL_ZOOM = 5;\n\nradialMenu.setItemLabelAndID(RadialMenu.CENTRAL_ITEM, '', -1);\nradialMenu.setItemLabelAndID(RadialMenu.NORTH, 'Pencil', TOOL_MODE_PENCIL);\nradialMenu.setItemLabelAndID(RadialMenu.EAST, 'Rectangle Select', TOOL_MODE_RECT_SELECT);\nradialMenu.setItemLabelAndID(RadialMenu.WEST, 'Move Selection', TOOL_MODE_MOVE_SELECTION);\n\ncontrolMenu.setItemLabelAndID(RadialMenu.CENTRAL_ITEM, '', -1);\ncontrolMenu.setItemLabelAndID(RadialMenu.NORTH, 'Pencil', CONTROL_PENCIL);\ncontrolMenu.setItemLabelAndID(RadialMenu.EAST, 'Rectangle Select', CONTROL_RECT_SELECT);\ncontrolMenu.setItemLabelAndID(RadialMenu.WEST, 'Move Selection', CONTROL_MOVE_SELECTION);\ncontrolMenu.setItemLabelAndID(RadialMenu.SOUTH_EAST, 'Translate', CONTROL_TRANSLATE);\ncontrolMenu.setItemLabelAndID(RadialMenu.SOUTH_WEST, 'Zoom', CONTROL_ZOOM);\n\n\nconst redraw = () => {\n    draw2.setFontHeight(RadialMenu.textHeight);\n    draw2.clear(255, 255, 255);\n    draw2.setCoordinateSystemToWorldSpaceUnits();\n    draw2.setFillColor(255, 128, 0, 0.3); // transparent orange\n    // draw filled rectangles over the selected strokes\n    for (let i = 0; i < selectedStrokes.length; ++i) {\n        const s = selectedStrokes[i];\n        const r = s.getBoundingRectangle();\n        draw2.fillRect(r.min.x, r.min.y, r.width(), r.height());\n    }\n\n    draw2.setStrokeColor(0, 0, 0); // black\n    drawing.draw(draw2);\n\n    draw2.setCoordinateSystemToPixels();\n\n    if (currentDragMode == DRAG_MODE_TOOL) {\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                draw2.setStrokeColor(0, 0, 0); // black\n                draw2.drawPolyline(mouseHistory);\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                draw2.setFillColor(255, 128, 0, 0.3); // transparent orange\n                draw2.fillRect(drag_start_x, drag_start_y, mouseX - drag_start_x, mouseY - drag_start_y);\n                draw2.setStrokeColor(255, 0, 0); // red\n                draw2.drawRect(drag_start_x, drag_start_y, mouseX - drag_start_x, mouseY - drag_start_y);\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                break;\n        }\n    }\n\n    if (radialMenu.isVisible) { radialMenu.draw(draw2); }\n    if (controlMenu.isVisible) { controlMenu.draw(draw2); }\n\n    if (showMouseCoordinates) {\n        draw2.setFillColor(0, 0, 0);\n        const x_world = draw2.convertPixelsToWorldSpaceUnitsX(mouseX);\n        const y_world = draw2.convertPixelsToWorldSpaceUnitsY(mouseY);\n        draw2.drawString(20, canvas.height - 20, `pixels:(${mouseX}, ${mouseY})   world:(${parseFloat(x_world).toFixed(2)}, ${parseFloat(y_world).toFixed(2)})`);\n    }\n};\n\nredraw();\n\n// for use with MouseEvent.button\nconst BUTTON_LEFT = 0;\nconst BUTTON_MIDDLE = 1;\nconst BUTTON_RIGHT = 2;\n// for use with MouseEvent.buttons\nconst BUTTONS_BIT_LEFT = 1;\nconst BUTTONS_BIT_MIDDLE = 4;\nconst BUTTONS_BIT_RIGHT = 2;\n\n\nwindow.mouseDownHandler = e => {\n    const canvas_rectangle = canvas.getBoundingClientRect();\n    mouseX = e.clientX - canvas_rectangle.left;\n    mouseY = e.clientY - canvas_rectangle.top;\n    // console.log(\"mouse down\");\n    // console.log(\"   \" + mouseX + \",\" + mouseY);\n\n    if (currentDragMode !== DRAG_MODE_NONE)\n    // The user is already dragging with a previously pressed button,\n    // so ignore the press event from this new button.\n    { return; }\n\n    drag_start_x = previousMouseX = mouseX;\n    drag_start_y = previousMouseY = mouseY;\n\n    if (controlMenu.isVisible || (e.button === BUTTON_RIGHT && e.shiftKey)) {\n        if (controlMenu.pressEvent(mouseX, mouseY)) { redraw(); }\n    } else if (radialMenu.isVisible || (e.button === BUTTON_RIGHT)) {\n        if (radialMenu.pressEvent(mouseX, mouseY)) { redraw(); }\n    } else if (e.button === BUTTON_LEFT && e.shiftKey) {\n        currentDragMode = DRAG_MODE_TRANSLATE;\n    } else if (e.button === BUTTON_LEFT && e.ctrlKey) {\n        currentDragMode = DRAG_MODE_ZOOM;\n    } else if (e.button === BUTTON_LEFT) {\n        mouseHistory = [];\n        mouseHistory.push(new Vector2D(mouseX, mouseY));\n        currentDragMode = DRAG_MODE_TOOL;\n    }\n};\n\nwindow.mouseUpHandler = e => {\n    let i;\n    // var canvas_rectangle = canvas.getBoundingClientRect();\n    // mouseX = e.clientX - canvas_rectangle.left;\n    // mouseY = e.clientY - canvas_rectangle.top;\n    // console.log(\"mouse up\");\n    if (controlMenu.isVisible && e.button === BUTTON_RIGHT) {\n        if (controlMenu.releaseEvent(mouseX, mouseY)) { redraw(); }\n    } else if (radialMenu.isVisible && e.button === BUTTON_RIGHT) {\n        const returnValue = radialMenu.releaseEvent(mouseX, mouseY);\n\n        const itemID = radialMenu.getIDOfSelection();\n        if (itemID >= 0 && itemID < NUM_TOOL_MODES) {\n            setToolMode(itemID, true);\n        }\n\n        if (returnValue) { redraw(); }\n    } else if (currentDragMode == DRAG_MODE_TRANSLATE && e.button === BUTTON_LEFT) {\n        currentDragMode = DRAG_MODE_NONE;\n    } else if (currentDragMode == DRAG_MODE_ZOOM && e.button === BUTTON_LEFT) {\n        currentDragMode = DRAG_MODE_NONE;\n    } else if (currentDragMode == DRAG_MODE_TOOL && e.button === BUTTON_LEFT) {\n        let newStroke;\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                newStroke = new Stroke();\n                for (i = 0; i < mouseHistory.length; ++i) {\n                    newStroke.pushPoint(draw2.convertPixelsToWorldSpaceUnits(mouseHistory[i]));\n                }\n                drawing.pushStroke(newStroke);\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                // complete a rectangle selection\n                var selectedRectangle = new Box2D(\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(drag_start_x, drag_start_y)),\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouseX, mouseY))\n                );\n                selectedStrokes = [];\n                for (i = 0; i < drawing.strokes.length; ++i) {\n                    const s = drawing.strokes[i];\n                    if (s.isContainedInRectangle(selectedRectangle)) { selectedStrokes.push(s); }\n                }\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                break;\n        }\n        currentDragMode = DRAG_MODE_NONE;\n        redraw();\n    }\n};\n\nconst mouseMoveHandler = e => {\n    previousMouseX = mouseX;\n    previousMouseY = mouseY;\n    const canvas_rectangle = canvas.getBoundingClientRect();\n    mouseX = e.clientX - canvas_rectangle.left;\n    mouseY = e.clientY - canvas_rectangle.top;\n\n\n    const deltaX = mouseX - previousMouseX;\n    const deltaY = mouseY - previousMouseY;\n\n\n    if (controlMenu.isVisible) {\n        if (controlMenu.isInMenuingMode) {\n            if (controlMenu.dragEvent(mouseX, mouseY)) { redraw(); }\n        } else {\n            // use the drag event to change the appropriate parameter\n            switch (controlMenu.getIDOfSelection()) {\n                case CONTROL_PENCIL:\n                    break;\n                case CONTROL_RECT_SELECT:\n                    break;\n                case CONTROL_MOVE_SELECTION:\n                    const vector = Vector2D.diff(\n                        draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouseX, mouseY)),\n                        draw2.convertPixelsToWorldSpaceUnits(new Vector2D(previousMouseX, previousMouseY))\n                    );\n                    selectedStrokes.forEach(stroke => stroke.translate(vector));\n                    drawing.isBoundingRectangleDirty = true;\n                    break;\n                case CONTROL_TRANSLATE:\n                    draw2.translate(deltaX, deltaY);\n                    break;\n                case CONTROL_ZOOM:\n                    draw2.zoomIn(\n                        zoomFactorPerPixelDragged ** (deltaX - deltaY),\n                        drag_start_x,\n                        drag_start_y\n                    );\n                    break;\n                default:\n                    break;\n            }\n            redraw();\n        }\n    } else if (radialMenu.isVisible) {\n        if (radialMenu.dragEvent(mouseX, mouseY)) { redraw(); }\n    } else if (currentDragMode === DRAG_MODE_TRANSLATE) {\n        draw2.translate(deltaX, deltaY);\n        redraw();\n    } else if (currentDragMode === DRAG_MODE_ZOOM) {\n        draw2.zoomIn(Math.pow(zoomFactorPerPixelDragged, deltaX - deltaY), drag_start_x, drag_start_y);\n        redraw();\n    } else if (currentDragMode === DRAG_MODE_TOOL) {\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                mouseHistory.push(new Vector2D(mouseX, mouseY));\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                break;\n            case TOOL_MODE_MOVE_SELECTION: {\n                const vector = Vector2D.diff(\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouseX, mouseY)),\n                    draw2\n                        .convertPixelsToWorldSpaceUnits(new Vector2D(\n                            previousMouseX,\n                            previousMouseY\n                        ))\n                );\n                selectedStrokes.forEach(stroke => stroke.translate(vector));\n                drawing.isBoundingRectangleDirty = true;\n                break;\n            }\n            default:\n                break;\n        }\n        redraw();\n    } else if (showMouseCoordinates) {\n        redraw();\n    }\n};\n\ncanvas.addEventListener('mousedown', mouseDownHandler);\ncanvas.addEventListener('mouseup', mouseUpHandler);\ncanvas.addEventListener('mousemove', mouseMoveHandler);\ncanvas.oncontextmenu = () => false; // disable the right-click menu\n\n\nwindow.setToolMode = (toolMode, updateRadioButtons = false) => {\n    currentToolMode = toolMode;\n    mouseHistory = [];\n    if (updateRadioButtons) {\n        let idString = 'null';\n        switch (toolMode) {\n            case TOOL_MODE_PENCIL:\n                idString = 'TOOL_MODE_PENCIL';\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                idString = 'TOOL_MODE_RECT_SELECT';\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                idString = 'TOOL_MODE_MOVE_SELECTION';\n                break;\n        }\n        document.getElementById(idString).checked = true;\n    }\n};\n\nwindow.frameAllButtonHandler = () => {\n    draw2.frame(drawing.getBoundingRectangle(), true);\n    redraw();\n};\n\nwindow.deleteSelectionButtonHandler = () => {\n    for (let i = selectedStrokes.length - 1; i >= 0; --i) {\n        const j = drawing.strokes.indexOf(selectedStrokes[i]);\n        if (j >= 0)\n        // this should really be moved into a method in the Drawing prototype\n        { drawing.strokes.splice(j, 1); }\n    }\n    selectedStrokes = [];\n    drawing.isBoundingRectangleDirty = true;\n\n    redraw();\n};\n\nwindow.deleteAllButtonHandler = () => {\n    selectedStrokes = [];\n    // this should really be moved into a method in the Drawing prototype\n    drawing.strokes = [];\n    drawing.isBoundingRectangleDirty = true;\n\n    redraw();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","class Vector2D {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    copy(other) {\n        this.x = other.x;\n        this.y = other.y;\n    }\n\n    negate() {\n        return new Vector2D(-this.x, -this.y);\n    }\n\n    norm() {\n        return Math.sqrt(this.normSquared());\n    }\n\n    normSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    normalize() {\n        const norm = this.norm();\n        if (norm) {\n            const k = 1.0 / norm;\n            return new Vector2D(k * this.x, k * this.y);\n        }\n        return new Vector2D();\n    }\n\n    static sum(vector1, vector2) {\n        return new Vector2D(vector1.x + vector2.x, vector1.y + vector2.y);\n    }\n\n    static diff(vector1, vector2) {\n        return new Vector2D(vector1.x - vector2.x, vector1.y - vector2.y);\n    }\n\n    static multiply(vector, factor) {\n        return new Vector2D(vector.x * factor, vector.y * factor);\n    }\n\n    static dot(vector1, vector2) {\n        return vector1.x * vector2.x + vector1.y * vector2.y;\n    }\n\n    static average(vector1, vector2) {\n        return new Vector2D((vector1.x + vector2.x) * 0.5, (vector1.y + vector2.y) * 0.5);\n    }\n\n    static centroidOfPoints(points) {\n        const { x: centerX, y: centerY } = points.reduce((centroid, point) => Object.assign({\n            x: centroid.x + point.x,\n            y: centroid.y + point.y\n        }), { x: 0, y: 0 });\n        return new Vector2D(\n            points.length ? centerX / points.length : centerX,\n            points.length ? centerY / points.length : centerY\n        );\n    }\n\n    static isPointInsidePolygon(queryPoint, polygon) {\n        if (polygon.length < 3) {\n            return false;\n        }\n\n        let returnValue = false;\n\n        polygon.forEach((cursorPoint, i) => {\n            const previousPoint = polygon[(i || polygon.length) - 1];\n\n            if (\n                (\n                    (\n                        cursorPoint.y < queryPoint.y &&\n                        queryPoint.y < previousPoint.y\n                    ) ||\n                    (\n                        previousPoint.y <= queryPoint.y &&\n                        queryPoint.y < cursorPoint.y\n                    )\n                ) &&\n                queryPoint.x < (\n                    (previousPoint.x - cursorPoint.x) *\n                    (queryPoint.y - cursorPoint.i) /\n                    (previousPoint.y - cursorPoint.y) +\n                    cursorPoint.x\n                )\n            ) {\n                returnValue = !returnValue;\n            }\n        });\n\n        return returnValue;\n    }\n\n    static convexHull(input) {\n        const cross = (o, a, b) =>\n            (a.x - o.x) *\n            (b.y - o.y) -\n            (a.y - o.y) *\n            (b.y - o.x);\n\n        const points = [...input];\n\n        points.sort((a, b) => (a.x === b.x ? a.y - b.y : a.x - b.x));\n\n        const lower = points.reduce((lowerInProgress, point) => {\n            while (\n                lowerInProgress.length >= 2 &&\n                cross(\n                    lowerInProgress[lowerInProgress.length - 2],\n                    lowerInProgress[lowerInProgress.length - 1],\n                    point\n                ) <= 0\n            ) {\n                lowerInProgress.pop();\n            }\n            return [...lowerInProgress, point];\n        }, []);\n\n        const upper = points.reduce((upperInProgress, point) => {\n            while (\n                upperInProgress.length >= 2 &&\n                cross(\n                    upperInProgress[upperInProgress.length - 2],\n                    upperInProgress[upperInProgress.length - 1],\n                    point\n                ) <= 0) {\n                upperInProgress.pop();\n            }\n            return [...upperInProgress, point];\n        }, []);\n\n        upper.pop();\n        lower.pop();\n\n        return [...lower, ...upper];\n    }\n\n    static computeExpandedPolygon(inputPoints, marginThickness) {\n        if (!inputPoints.length) {\n            return [];\n        } else if (inputPoints.length === 1) {\n            return Vector2D.computeExpandedPolygonForOnePoint(inputPoints[0], marginThickness);\n        } else if (inputPoints.length === 2) {\n            return Vector2D.computeExpandedPolygonForTwoPoint(inputPoints, marginThickness);\n        }\n        return Vector2D.computeExpandedPolygonForMultiPoints(inputPoints, marginThickness);\n    }\n\n    static computeExpandedPolygonForOnePoint(point, marginThickness) {\n        return [\n            new Vector2D(point.x - marginThickness, point.y),\n            new Vector2D(point.x, point.y - marginThickness),\n            new Vector2D(point.x + marginThickness, point.y),\n            new Vector2D(point.x, point.y + marginThickness)\n        ];\n    }\n\n    static computeExpandedPolygonForTwoPoint([point0, point1], marginThickness) {\n        const vector0 = Vector2D.multiply(\n            Vector2D.diff(point0, point1).normalize(),\n            marginThickness\n        );\n\n        const vector1 = new Vector2D(-vector0.y, vector0.x);\n\n        return [\n            Vector2D.sum(point0, vector1),\n            Vector2D.sum(point0, vector0.negate()),\n            Vector2D.sum(point0, vector1.negate()),\n            Vector2D.sum(point1, vector1.negate()),\n            Vector2D.sum(point1, vector0),\n            Vector2D.sum(point1, vector1)\n        ];\n    }\n\n    static computeExpandedPolygonForMultiPoints(points, marginThickness) {\n        return points.reduce((expandedPolygon, cursorPoint, i) => {\n            const previousPoint = points[(i || points.length) - 1];\n            const nextPoint = points[(i + 1) % points.length];\n            const previousVector = Vector2D.diff(cursorPoint, previousPoint).normalize();\n            const nextVector = Vector2D.diff(cursorPoint, nextPoint).normalize();\n\n            return [\n                ...expandedPolygon,\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply([\n                        previousVector.y,\n                        -previousVector.x\n                    ], marginThickness)\n                ),\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply(Vector2D.sum(\n                        nextVector,\n                        previousVector\n                    ).normalize(), marginThickness)\n                ),\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply([\n                        -nextVector.y,\n                        nextVector.x\n                    ], marginThickness)\n                )\n            ];\n        }, []);\n    }\n}\n\nexport default Vector2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Vector2D.js","import Vector2D from './Vector2D';\nimport Box2D from './Box2D';\n\nlet pixels = 'pixels';\nlet world = 'world';\nclass Draw2D {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.canvasContext = canvas.getContext('2d');\n        this.canvasWidth_pixels = canvas.width;\n        this.canvasHeight_pixels = canvas.height;\n        this.offsetXPixels = 0;\n        this.offsetYPixels = 0;\n        this.scaleFactorInWorldSpaceUnitsPerPixel = 1.0; // greater if user is more zoomed out\n        this.setFont(this.canvasContext.font);\n        this.coordinateSystem = Draw2D.PIXELS;\n    }\n\n    static get PIXELS() {\n        return pixels;\n    }\n\n    static set PIXELS(input) {\n        pixels = input;\n    }\n\n    static get WORLD() {\n        return world;\n    }\n\n    static set WORLD(input) {\n        world = input;\n    }\n\n    setFont(fontName) {\n        this.canvasContext.font = fontName;\n        this.fontHeight = parseInt(this.canvasContext.font.match(/\\d+/)[0], 10);\n    }\n\n    setFontHeight(fontHeight) {\n        this.canvasContext.font = `${fontHeight.toString()}px sans-serif`;\n        this.fontHeight = parseInt(this.canvasContext.font.match(/\\d+/)[0], 10);\n    }\n\n    convertPixelsToWorldSpaceUnitsX(xPixels) {\n        return (xPixels - this.offsetXPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel;\n    }\n\n    convertPixelsToWorldSpaceUnitsY(yPixels) {\n        return (yPixels - this.offsetYPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel;\n    }\n\n    convertPixelsToWorldSpaceUnits(pointPixels) {\n        return new Vector2D(\n            (pointPixels.x - this.offsetXPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel,\n            (pointPixels.y - this.offsetYPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel\n        );\n    }\n\n    convertWorldSpaceUnitsToPixelsX(xWorld) {\n        return xWorld / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetXPixels;\n    }\n\n    convertWorldSpaceUnitsToPixelsY(yWorld) {\n        return yWorld / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetYPixels;\n    }\n\n    convertWorldSpaceUnitsToPixels(pointWorld) {\n        return new Vector2D(\n            pointWorld.x / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetXPixels,\n            pointWorld.y / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetYPixels\n        );\n    }\n\n    translate(deltaXPixels, deltaYPixels) {\n        this.offsetXPixels += deltaXPixels;\n        this.offsetYPixels += deltaYPixels;\n    }\n\n    zoomIn(\n        zoomFactor,\n        centerXPixels,\n        centerYPixels\n    ) {\n        this.scaleFactorInWorldSpaceUnitsPerPixel /= zoomFactor;\n        this.offsetXPixels = centerXPixels - (centerXPixels - this.offsetXPixels) * zoomFactor;\n        this.offsetYPixels = centerYPixels - (centerYPixels - this.offsetYPixels) * zoomFactor;\n    }\n\n    zoomInAroundCenterOfCanvas(zoomFactor) {\n        this.zoomIn(zoomFactor, this.canvasWidth_pixels * 0.5, this.canvasHeight_pixels * 0.5);\n    }\n\n    translateAndZoomBasedOnDisplacementOfTwoFingers(aOld, bOld, aNew, bNew) {\n        const M1 = Vector2D.average(aOld, bOld);\n        const M2 = Vector2D.average(aNew, bNew);\n\n        const translation = Vector2D.diff(M2, M1);\n\n        const vector0 = Vector2D.diff(aOld, bOld);\n        const vector1 = Vector2D.diff(aNew, bNew);\n\n        const vector0Length = vector0.norm();\n        const vector1Length = vector1.norm();\n        let scaleFactor = 1;\n        if (vector0Length > 0 && vector1Length > 0) { scaleFactor = vector1Length / vector0Length; }\n        this.translate(translation.x, translation.y);\n        this.zoomIn(scaleFactor, M2.x, M2.y);\n    }\n\n    frame(originalRect, expand) {\n        if (\n            originalRect.isEmpty ||\n            originalRect.diagonal().x === 0 ||\n            originalRect.diagonal().y === 0\n        ) {\n            return;\n        }\n        let rect = originalRect;\n        if (expand) {\n            const diagonal = rect.diagonal().norm() / 20;\n            const vector = new Vector2D(diagonal, diagonal);\n            rect = new Box2D(Vector2D.diff(rect.min, vector), Vector2D.sum(rect.max, vector));\n        }\n        if (rect.width() / rect.height() >= this.canvasWidth_pixels / this.canvasHeight_pixels) {\n            // The rectangle to frame is wider (or shorter) than the canvas,\n            // so the limiting factor is the width of the rectangle.\n            this.offsetXPixels = -rect.min.x * this.canvasWidth_pixels / rect.width();\n            this.scaleFactorInWorldSpaceUnitsPerPixel = rect.width() / this.canvasWidth_pixels;\n            this.offsetYPixels =\n                this.canvasHeight_pixels / 2 -\n                rect.center().y / this.scaleFactorInWorldSpaceUnitsPerPixel;\n        } else {\n            // The limiting factor is the height of the rectangle.\n            this.offsetYPixels = -rect.min.y * this.canvasHeight_pixels / rect.height();\n            this.scaleFactorInWorldSpaceUnitsPerPixel = rect.height() / this.canvasHeight_pixels;\n            this.offsetXPixels =\n                this.canvasWidth_pixels / 2 -\n                rect.center().x / this.scaleFactorInWorldSpaceUnitsPerPixel;\n        }\n    }\n\n    resize(width, height) {\n        const oldCenter = this\n            .convertPixelsToWorldSpaceUnits(new Vector2D(\n                this.canvasWidth_pixels * 0.5,\n                this.canvasHeight_pixels * 0.5\n            ));\n        const radius =\n            Math.min(this.canvasWidth_pixels, this.canvasHeight_pixels) *\n            0.5 *\n            this.scaleFactorInWorldSpaceUnitsPerPixel;\n\n        this.canvasWidth_pixels = width;\n        this.canvasHeight_pixels = height;\n\n        if (radius > 0) {\n            this.frame(\n                new Box2D(\n                    new Vector2D(oldCenter.x - radius, oldCenter.y - radius),\n                    new Vector2D(oldCenter.x + radius, oldCenter.y + radius)\n                ),\n                false\n            );\n        }\n    }\n\n    setCoordinateSystemToPixels() {\n        this.coordinateSystem = Draw2D.PIXELS;\n    }\n\n    setCoordinateSystemToWorldSpaceUnits() {\n        this.coordinateSystem = Draw2D.WORLD;\n    }\n\n    setStrokeColor(red, green, blue, alpha = 1.0) {\n        if (alpha === 1.0) {\n            this.canvasContext.strokeStyle = `rgb(${red},${green},${blue})`;\n        } else {\n            this.canvasContext.strokeStyle = `rgba(${red},${green},${blue},${alpha})`;\n        }\n    }\n\n    setFillColor(red, green, blue, alpha = 1.0) {\n        if (alpha === 1.0) {\n            this.canvasContext.fillStyle = `rgb(${red},${green},${blue})`;\n        } else {\n            this.canvasContext.fillStyle = `rgba(${red},${green},${blue},${alpha})`;\n        }\n    }\n\n    setLineWidth(lw) {\n        this.canvasContext.lineWidth = lw;\n    }\n\n    clear(red, green, blue) {\n        this.setFillColor(red, green, blue);\n        this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    drawLine(x1, y1, x2, y2) {\n        if (this.coordinateSystem === Draw2D.WORLD) {\n            this.contextedDrawLine(\n                this.convertWorldSpaceUnitsToPixelsX(x1),\n                this.convertWorldSpaceUnitsToPixelsY(y1),\n                this.convertWorldSpaceUnitsToPixelsX(x2),\n                this.convertWorldSpaceUnitsToPixelsY(y2)\n            );\n        } else {\n            this.contextedDrawLine(x1, y1, x2, y2);\n        }\n    }\n\n    contextedDrawLine(x1, y1, x2, y2) {\n        this.canvasContext.beginPath();\n        this.canvasContext.moveTo(x1, y1);\n        this.canvasContext.lineTo(x2, y2);\n        this.canvasContext.stroke();\n    }\n\n    drawRect(unsignedX, unsignedY, unsignedWidth, unsignedHeight, isFilled = false) {\n        const {\n            height,\n            width,\n            x,\n            y\n        } = Draw2D.getRectSignedCoords(\n            unsignedX,\n            unsignedY,\n            unsignedWidth,\n            unsignedHeight\n        );\n        if (this.coordinateSystem === Draw2D.WORLD) {\n            this.contextedDrawRect(\n                this.convertWorldSpaceUnitsToPixelsX(x),\n                this.convertWorldSpaceUnitsToPixelsY(y),\n                this.scaleFactorInWorldSpaceUnitsPerPixel,\n                this.scaleFactorInWorldSpaceUnitsPerPixel,\n                isFilled\n            );\n        } else {\n            this.contextedDrawRect(x, y, width, height, isFilled);\n        }\n    }\n\n    contextedDrawRect(x, y, width, height, isFilled) {\n        if (isFilled) {\n            this.canvasContext.fillRect(x, y, width, height);\n        } else {\n            this.canvasContext.strokeRect(x, y, width, height);\n        }\n    }\n\n    static getRectSignedCoords(x, y, width, height) {\n        return {\n            height: height < 0 ? -height : height,\n            width: width < 0 ? -width : width,\n            x: width < 0 ? x + width : x,\n            y: height < 0 ? y + height : y\n        };\n    }\n\n    fillRect(x, y, w, h) {\n        this.drawRect(x, y, w, h, true);\n    }\n\n    drawCircle(xCenter, yCenter, radius, isFilled = false) {\n        if (this.coordinateSystem === Draw2D.WORLD) {\n            this.contextedDrawCircle(\n                this.convertWorldSpaceUnitsToPixelsX(xCenter),\n                this.convertWorldSpaceUnitsToPixelsY(yCenter),\n                radius / this.scaleFactorInWorldSpaceUnitsPerPixel,\n                isFilled\n            );\n        } else {\n            this.contextedDrawCircle(xCenter, yCenter, radius, isFilled);\n        }\n    }\n\n    contextedDrawCircle(xCenter, yCenter, radius, isFilled = false) {\n        this.canvasContext.beginPath();\n        this.canvasContext.arc(xCenter, yCenter, radius, 0, 2 * Math.PI, false);\n\n        if (isFilled) {\n            this.canvasContext.fill();\n        } else {\n            this.canvasContext.stroke();\n        }\n    }\n\n    fillCircle(xCenter, yCenter, radius) {\n        this.drawCircle(xCenter, yCenter, radius, true);\n    }\n\n    drawPolyline(points, isFilled = false, isClosed = false) {\n        if (points.length < 2) {\n            return;\n        }\n        this.canvasContext.beginPath();\n        points.forEach((point, i) => {\n            let { x, y } = point;\n            if (this.coordinateSystem === Draw2D.WORLD) {\n                x = this.convertWorldSpaceUnitsToPixelsX(x);\n                y = this.convertWorldSpaceUnitsToPixelsY(y);\n            }\n            this.canvasContext[`${i ? 'line' : 'move'}To`](x, y);\n        });\n        if (isClosed) {\n            this.canvasContext.closePath();\n        }\n        if (isFilled) {\n            this.canvasContext.fill();\n        } else {\n            this.canvasContext.stroke();\n        }\n    }\n\n    drawPolygon(points, isFilled = false) {\n        this.drawPolyline(points, isFilled, true);\n    }\n\n    fillPolygon(points) {\n        this.drawPolyline(points, true, true);\n    }\n\n    stringWidth(s) {\n        if (s.length === 0) return 0;\n        return this.canvasContext.measureText(s).width;\n    }\n\n    drawString(x, y, s) {\n        if (s.length === 0) return;\n        this.canvasContext.fillText(s, x, y);\n    }\n}\n\nexport default Draw2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Draw2D.js","import Vector2D from './Vector2D';\n\nclass Box2D {\n    constructor(vectorMin, vectorMax) {\n        this.isEmpty = true;\n        this.min = new Vector2D();\n        this.max = new Vector2D();\n        if (vectorMin && vectorMax) {\n            this.boundPoint(vectorMin);\n            this.boundPoint(vectorMax);\n        }\n    }\n\n    clear() {\n        this.isEmpty = true;\n        this.min = new Vector2D();\n        this.max = new Vector2D();\n    }\n\n    center() {\n        return Vector2D.average(this.min, this.max);\n    }\n\n    diagonal() {\n        return Vector2D.diff(this.max, this.min);\n    }\n\n    width() {\n        return this.max.x - this.min.x;\n    }\n\n    height() {\n        return this.max.y - this.min.y;\n    }\n\n    containsPoint(point) {\n        return !(\n            this.isEmpty ||\n            point.x < this.min.x ||\n            point.x > this.max.x ||\n            point.y < this.min.y ||\n            point.y > this.max.y\n        );\n    }\n\n    containsBox(box) {\n        if (this.isEmpty) {\n            return false;\n        }\n        if (box.isEmpty) {\n            return true;\n        }\n\n        return this.min.x <= box.min.x &&\n            box.max.x <= this.max.x &&\n            this.min.y <= box.min.y &&\n            box.max.y <= this.max.y;\n    }\n\n    boundPoint(vector) {\n        if (this.isEmpty) {\n            this.isEmpty = false;\n            this.min.copy(vector);\n            this.max.copy(vector);\n        } else {\n            if (vector.x < this.min.x) {\n                this.min.x = vector.x;\n            } else if (vector.x > this.max.x) {\n                this.max.x = vector.x;\n            }\n\n            if (vector.y < this.min.y) {\n                this.min.y = vector.y;\n            } else if (vector.y > this.max.y) {\n                this.max.y = vector.y;\n            }\n        }\n    }\n\n    boundPoints(points) {\n        points.forEach(point => this.boundPoint(point));\n    }\n\n    boundBox(box) {\n        if (!box.isEmpty) {\n            this.boundPoint(box.min);\n            this.boundPoint(box.max);\n        }\n    }\n}\n\nexport default Box2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Box2D.js"],"sourceRoot":""}