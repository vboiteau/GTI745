{"version":3,"sources":["webpack:///webpack/bootstrap 4f7cd91ba27056702062","webpack:///./src/main.js","webpack:///./src/Vector2D.js","webpack:///./src/Draw2D.js","webpack:///./src/Box2D.js","webpack:///./src/RadialMenu.js"],"names":["ControlMenu","isInMenuingMode","prototype","pressEvent","x","y","call","dragEvent","isVisible","returnValue","distanceSquared","x0","y0","normSquared","menuRadius","draw","draw2","drawMenuItems","radiusOfNeutralZone","Stroke","points","boundingRectangle","isBoundingRectangleDirty","pushPoint","q","push","getBoundingRectangle","clear","boundPoints","isContainedInRectangle","rectangle","containsBox","isContainedInLassoPolygon","polygonPoints","i","length","isPointInsidePolygon","translate","v","p","copy","sum","rotate","angle","center","sine","Math","sin","cosine","cos","deltaX","deltaY","new_x","new_y","drawPolyline","Drawing","strokes","pushStroke","s","boundBox","canvas","document","getElementById","drawing","radialMenu","controlMenu","selectedStrokes","mouseX","mouseY","previousMouseX","previousMouseY","drag_start_x","drag_start_y","mouseHistory","zoomFactorPerPixelDragged","window","showMouseCoordinates","TOOL_MODE_PENCIL","TOOL_MODE_RECT_SELECT","TOOL_MODE_MOVE_SELECTION","NUM_TOOL_MODES","currentToolMode","DRAG_MODE_NONE","DRAG_MODE_TRANSLATE","DRAG_MODE_ZOOM","DRAG_MODE_TOOL","currentDragMode","CONTROL_NONE","CONTROL_PENCIL","CONTROL_RECT_SELECT","CONTROL_MOVE_SELECTION","CONTROL_TRANSLATE","CONTROL_ZOOM","setItemLabelAndID","CENTRAL_ITEM","NORTH","EAST","WEST","SOUTH_EAST","SOUTH_WEST","redraw","setFontHeight","textHeight","setCoordinateSystemToWorldSpaceUnits","setFillColor","r","fillRect","min","width","height","setStrokeColor","setCoordinateSystemToPixels","drawRect","x_world","convertPixelsToWorldSpaceUnitsX","y_world","convertPixelsToWorldSpaceUnitsY","drawString","parseFloat","toFixed","BUTTON_LEFT","BUTTON_MIDDLE","BUTTON_RIGHT","BUTTONS_BIT_LEFT","BUTTONS_BIT_MIDDLE","BUTTONS_BIT_RIGHT","mouseDownHandler","canvas_rectangle","getBoundingClientRect","e","clientX","left","clientY","top","button","shiftKey","ctrlKey","mouseUpHandler","releaseEvent","itemID","getIDOfSelection","setToolMode","newStroke","convertPixelsToWorldSpaceUnits","selectedRectangle","mouseMoveHandler","vector","diff","forEach","stroke","zoomIn","pow","addEventListener","oncontextmenu","toolMode","updateRadioButtons","idString","checked","frameAllButtonHandler","frame","deleteSelectionButtonHandler","j","indexOf","splice","deleteAllButtonHandler","Vector2D","other","sqrt","norm","k","vector1","vector2","factor","reduce","centroid","point","Object","assign","centerX","centerY","queryPoint","polygon","cursorPoint","previousPoint","input","cross","o","a","b","sort","lower","lowerInProgress","pop","upper","upperInProgress","inputPoints","marginThickness","computeExpandedPolygonForOnePoint","computeExpandedPolygonForTwoPoint","computeExpandedPolygonForMultiPoints","point0","point1","vector0","multiply","normalize","negate","expandedPolygon","nextPoint","previousVector","nextVector","pixels","world","Draw2D","canvasContext","getContext","canvasWidth_pixels","canvasHeight_pixels","offsetXPixels","offsetYPixels","scaleFactorInWorldSpaceUnitsPerPixel","setFont","font","coordinateSystem","PIXELS","fontName","fontHeight","parseInt","match","toString","xPixels","yPixels","pointPixels","xWorld","yWorld","pointWorld","deltaXPixels","deltaYPixels","zoomFactor","centerXPixels","centerYPixels","aOld","bOld","aNew","bNew","M1","average","M2","translation","vector0Length","vector1Length","scaleFactor","originalRect","expand","isEmpty","diagonal","rect","max","oldCenter","radius","WORLD","red","green","blue","alpha","strokeStyle","fillStyle","lw","lineWidth","x1","y1","x2","y2","contextedDrawLine","convertWorldSpaceUnitsToPixelsX","convertWorldSpaceUnitsToPixelsY","beginPath","moveTo","lineTo","unsignedX","unsignedY","unsignedWidth","unsignedHeight","isFilled","getRectSignedCoords","contextedDrawRect","strokeRect","w","h","xCenter","yCenter","contextedDrawCircle","arc","PI","fill","drawCircle","isClosed","closePath","measureText","fillText","Box2D","vectorMin","vectorMax","boundPoint","box","RadialMenu","label","Array","map","isEnabled","cell","selectedItem","index","id","N","flag","target","console","log","getItemID","dx","dy","newlySelectedItem","theta","asin","assert","floor","minDifference","itemWithMinDifference","candidateItem","candidateItemTheta","candidateDifference","abs","draw2D","drawOnlyHilitedItem","drawUsingPieStyle","radiusOfPie","FOREGROUND_2","MENU_ALPHA","fillCircle","isItemHilited","FOREGROUND_1","BACKGROUND","heightOfItem","marginAroundText","marginBetweenItems","radiusPrime","SQRT2","stringWidth","widthOfItem","otherStringWidth"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4f7cd91ba27056702062","import Vector2D from './Vector2D';\nimport Box2D from './Box2D';\nimport Draw2D from './Draw2D';\nimport RadialMenu from './RadialMenu';\n\n// ============================================================\n// A control menu.\n// To create a new instance, use the new keyword:\n//    var cm = new ControlMenu();\n// ============================================================\n\nfunction ControlMenu() {\n    // During drag events, when this is false,\n    // we are in parameter-control mode,\n    // and the drag events should be interpreted by the client\n    // to control the parameter that was selected by the user.\n    this.isInMenuingMode = false;\n}\nControlMenu.prototype = new RadialMenu();\nControlMenu.prototype.pressEvent = function (x, y) {\n    this.isInMenuingMode = true;\n    return RadialMenu.prototype.pressEvent.call(this, x, y);\n};\nControlMenu.prototype.dragEvent = function (x, y) {\n    if (!this.isVisible) { return false; }\n    if (this.isInMenuingMode) {\n        const returnValue = RadialMenu.prototype.dragEvent.call(this, x, y);\n        const distanceSquared = new Vector2D(x - this.x0, y - this.y0).normSquared();\n        if (distanceSquared > ControlMenu.menuRadius * ControlMenu.menuRadius) {\n            // It is time to transition from menuing mode to parameter-control mode.\n            this.isInMenuingMode = false;\n            return true;\n        }\n        return returnValue;\n    }\n    // The widget is not in menuing mode, it is in parameter-control mode,\n    // and the client is supposed to process the event.\n    return false;\n};\nControlMenu.prototype.draw = function (draw2) {\n    if (!this.isVisible) { return; }\n    this.drawMenuItems(draw2, this.isInMenuingMode, true, ControlMenu.menuRadius);\n};\n\n// static constant\nControlMenu.menuRadius = RadialMenu.radiusOfNeutralZone * 6;\n\n// ============================================================\n// Stroke objects are for storing a continuous polygonal line of ink.\n// It is made up of points in world space.\n// To create a new instance, use the new keyword:\n//    var s = new Stroke();\n// ============================================================\n\nfunction Stroke() {\n    this.points = []; // these points are in world space\n\n    this.boundingRectangle = new Box2D();\n    this.isBoundingRectangleDirty = true;\n}\nStroke.prototype = {\n    pushPoint(q) {\n        this.points.push(q);\n        this.isBoundingRectangleDirty = true;\n    },\n    getBoundingRectangle() {\n        if (this.isBoundingRectangleDirty) {\n            this.boundingRectangle.clear();\n            this.boundingRectangle.boundPoints(this.points);\n            this.isBoundingRectangleDirty = false;\n        }\n        return this.boundingRectangle;\n    },\n    isContainedInRectangle(rectangle /* an instance of Box2D */) {\n        return rectangle.containsBox(this.getBoundingRectangle());\n    },\n    isContainedInLassoPolygon(polygonPoints /* an array of Vector2D in world space */) {\n        for (let i = 0; i < this.points.length; ++i) {\n            if (!Vector2D.isPointInsidePolygon(this.points[i], polygonPoints)) { return false; }\n        }\n        return true;\n    },\n    translate(v /* an instance of Vector2D */) {\n        for (let i = 0; i < this.points.length; ++i) {\n            const p = this.points[i];\n            p.copy(Vector2D.sum(p, v));\n        }\n        this.isBoundingRectangleDirty = true;\n    },\n    rotate(angle /* in radians */, center /* instance of Vector2D, in world space */) {\n        const sine = Math.sin(angle);\n        const cosine = Math.cos(angle);\n        for (let i = 0; i < this.points.length; ++i) {\n            const p = this.points[i];\n            const deltaX = p.x - center.x;\n            const deltaY = p.y - center.y;\n            const new_x = center.x + deltaX * cosine - deltaY * sine;\n            const new_y = center.y + deltaX * sine + deltaY * cosine;\n            p.x = new_x;\n            p.y = new_y;\n        }\n        this.isBoundingRectangleDirty = true;\n    },\n    draw(draw2) {\n        draw2.drawPolyline(this.points);\n    }\n};\n\n// ============================================================\n// Drawing objects are for storing a set of Strokes.\n// To create a new instance, use the new keyword:\n//    var d = new Drawing();\n// ============================================================\n\nfunction Drawing() {\n    this.strokes = [];\n\n    this.boundingRectangle = new Box2D();\n    this.isBoundingRectangleDirty = true;\n}\nDrawing.prototype = {\n    pushStroke(s) {\n        this.strokes.push(s);\n        this.isBoundingRectangleDirty = true;\n    },\n    clear() {\n        this.strokes = [];\n        this.boundingRectangle.clear();\n    },\n    getBoundingRectangle() {\n        if (this.isBoundingRectangleDirty) {\n            this.boundingRectangle.clear();\n            for (let i = 0; i < this.strokes.length; ++i) {\n                const s = this.strokes[i];\n                this.boundingRectangle.boundBox(s.getBoundingRectangle());\n            }\n            this.isBoundingRectangleDirty = false;\n        }\n        return this.boundingRectangle;\n    },\n\n    draw(draw2) {\n        // draw2.setLineWidth( 5 );\n        for (let i = 0; i < this.strokes.length; ++i) {\n            const s = this.strokes[i];\n            s.draw(draw2);\n        }\n        // draw2.setLineWidth( 1 );\n    }\n};\n\n// ============================================================\n\nconst canvas = document.getElementById('myCanvas');\n// var canvas_context = canvas.getContext(\"2d\");\nconst draw2 = new Draw2D(canvas);\nconst drawing = new Drawing();\n\nconst radialMenu = new RadialMenu();\nconst controlMenu = new ControlMenu();\n\n// stores a subset of the strokes\nlet selectedStrokes = []; // an array of instances of Stroke\n\nlet mouseX,\n    mouseY,\n    previousMouseX,\n    previousMouseY,\n    drag_start_x,\n    drag_start_y;\nlet mouseHistory = []; // array of Vector2D in pixel space\n\nconst zoomFactorPerPixelDragged = 1.005;\n\nwindow.showMouseCoordinates = false;\n\n// The below tool modes are constants,\n// but are defined using var instead of const\n// so that they will be accessible in the definitions\n// of the input tags at the top of this file\n// (bug fix for the Edge web browser)\nconst TOOL_MODE_PENCIL = 0;\nconst TOOL_MODE_RECT_SELECT = 1;\nconst TOOL_MODE_MOVE_SELECTION = 2;\nconst NUM_TOOL_MODES = 3;\nlet currentToolMode = TOOL_MODE_PENCIL;\n\nconst DRAG_MODE_NONE = 0;\nconst DRAG_MODE_TRANSLATE = 1;\nconst DRAG_MODE_ZOOM = 2;\nconst DRAG_MODE_TOOL = 3; // in this case, the currentToolMode could be pencil, rect_select, move_selection\nlet currentDragMode = DRAG_MODE_NONE;\n\nconst CONTROL_NONE = 0;\nconst CONTROL_PENCIL = 1;\nconst CONTROL_RECT_SELECT = 2;\nconst CONTROL_MOVE_SELECTION = 3;\nconst CONTROL_TRANSLATE = 4;\nconst CONTROL_ZOOM = 5;\n\nradialMenu.setItemLabelAndID(RadialMenu.CENTRAL_ITEM, '', -1);\nradialMenu.setItemLabelAndID(RadialMenu.NORTH, 'Pencil', TOOL_MODE_PENCIL);\nradialMenu.setItemLabelAndID(RadialMenu.EAST, 'Rectangle Select', TOOL_MODE_RECT_SELECT);\nradialMenu.setItemLabelAndID(RadialMenu.WEST, 'Move Selection', TOOL_MODE_MOVE_SELECTION);\n\ncontrolMenu.setItemLabelAndID(RadialMenu.CENTRAL_ITEM, '', -1);\ncontrolMenu.setItemLabelAndID(RadialMenu.NORTH, 'Pencil', CONTROL_PENCIL);\ncontrolMenu.setItemLabelAndID(RadialMenu.EAST, 'Rectangle Select', CONTROL_RECT_SELECT);\ncontrolMenu.setItemLabelAndID(RadialMenu.WEST, 'Move Selection', CONTROL_MOVE_SELECTION);\ncontrolMenu.setItemLabelAndID(RadialMenu.SOUTH_EAST, 'Translate', CONTROL_TRANSLATE);\ncontrolMenu.setItemLabelAndID(RadialMenu.SOUTH_WEST, 'Zoom', CONTROL_ZOOM);\n\n\nconst redraw = () => {\n    draw2.setFontHeight(RadialMenu.textHeight);\n    draw2.clear(255, 255, 255);\n    draw2.setCoordinateSystemToWorldSpaceUnits();\n    draw2.setFillColor(255, 128, 0, 0.3); // transparent orange\n    // draw filled rectangles over the selected strokes\n    for (let i = 0; i < selectedStrokes.length; ++i) {\n        const s = selectedStrokes[i];\n        const r = s.getBoundingRectangle();\n        draw2.fillRect(r.min.x, r.min.y, r.width(), r.height());\n    }\n\n    draw2.setStrokeColor(0, 0, 0); // black\n    drawing.draw(draw2);\n\n    draw2.setCoordinateSystemToPixels();\n\n    if (currentDragMode == DRAG_MODE_TOOL) {\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                draw2.setStrokeColor(0, 0, 0); // black\n                draw2.drawPolyline(mouseHistory);\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                draw2.setFillColor(255, 128, 0, 0.3); // transparent orange\n                draw2.fillRect(drag_start_x, drag_start_y, mouseX - drag_start_x, mouseY - drag_start_y);\n                draw2.setStrokeColor(255, 0, 0); // red\n                draw2.drawRect(drag_start_x, drag_start_y, mouseX - drag_start_x, mouseY - drag_start_y);\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                break;\n        }\n    }\n\n    if (radialMenu.isVisible) { radialMenu.draw(draw2); }\n    if (controlMenu.isVisible) { controlMenu.draw(draw2); }\n\n    if (showMouseCoordinates) {\n        draw2.setFillColor(0, 0, 0);\n        const x_world = draw2.convertPixelsToWorldSpaceUnitsX(mouseX);\n        const y_world = draw2.convertPixelsToWorldSpaceUnitsY(mouseY);\n        draw2.drawString(20, canvas.height - 20, `pixels:(${mouseX}, ${mouseY})   world:(${parseFloat(x_world).toFixed(2)}, ${parseFloat(y_world).toFixed(2)})`);\n    }\n};\n\nredraw();\n\n// for use with MouseEvent.button\nconst BUTTON_LEFT = 0;\nconst BUTTON_MIDDLE = 1;\nconst BUTTON_RIGHT = 2;\n// for use with MouseEvent.buttons\nconst BUTTONS_BIT_LEFT = 1;\nconst BUTTONS_BIT_MIDDLE = 4;\nconst BUTTONS_BIT_RIGHT = 2;\n\n\nwindow.mouseDownHandler = e => {\n    const canvas_rectangle = canvas.getBoundingClientRect();\n    mouseX = e.clientX - canvas_rectangle.left;\n    mouseY = e.clientY - canvas_rectangle.top;\n    // console.log(\"mouse down\");\n    // console.log(\"   \" + mouseX + \",\" + mouseY);\n\n    if (currentDragMode !== DRAG_MODE_NONE)\n    // The user is already dragging with a previously pressed button,\n    // so ignore the press event from this new button.\n    { return; }\n\n    drag_start_x = previousMouseX = mouseX;\n    drag_start_y = previousMouseY = mouseY;\n\n    if (controlMenu.isVisible || (e.button === BUTTON_RIGHT && e.shiftKey)) {\n        if (controlMenu.pressEvent(mouseX, mouseY)) { redraw(); }\n    } else if (radialMenu.isVisible || (e.button === BUTTON_RIGHT)) {\n        if (radialMenu.pressEvent(mouseX, mouseY)) { redraw(); }\n    } else if (e.button === BUTTON_LEFT && e.shiftKey) {\n        currentDragMode = DRAG_MODE_TRANSLATE;\n    } else if (e.button === BUTTON_LEFT && e.ctrlKey) {\n        currentDragMode = DRAG_MODE_ZOOM;\n    } else if (e.button === BUTTON_LEFT) {\n        mouseHistory = [];\n        mouseHistory.push(new Vector2D(mouseX, mouseY));\n        currentDragMode = DRAG_MODE_TOOL;\n    }\n};\n\nwindow.mouseUpHandler = e => {\n    let i;\n    // var canvas_rectangle = canvas.getBoundingClientRect();\n    // mouseX = e.clientX - canvas_rectangle.left;\n    // mouseY = e.clientY - canvas_rectangle.top;\n    // console.log(\"mouse up\");\n    if (controlMenu.isVisible && e.button === BUTTON_RIGHT) {\n        if (controlMenu.releaseEvent(mouseX, mouseY)) { redraw(); }\n    } else if (radialMenu.isVisible && e.button === BUTTON_RIGHT) {\n        const returnValue = radialMenu.releaseEvent(mouseX, mouseY);\n\n        const itemID = radialMenu.getIDOfSelection();\n        if (itemID >= 0 && itemID < NUM_TOOL_MODES) {\n            setToolMode(itemID, true);\n        }\n\n        if (returnValue) { redraw(); }\n    } else if (currentDragMode == DRAG_MODE_TRANSLATE && e.button === BUTTON_LEFT) {\n        currentDragMode = DRAG_MODE_NONE;\n    } else if (currentDragMode == DRAG_MODE_ZOOM && e.button === BUTTON_LEFT) {\n        currentDragMode = DRAG_MODE_NONE;\n    } else if (currentDragMode == DRAG_MODE_TOOL && e.button === BUTTON_LEFT) {\n        let newStroke;\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                newStroke = new Stroke();\n                for (i = 0; i < mouseHistory.length; ++i) {\n                    newStroke.pushPoint(draw2.convertPixelsToWorldSpaceUnits(mouseHistory[i]));\n                }\n                drawing.pushStroke(newStroke);\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                // complete a rectangle selection\n                var selectedRectangle = new Box2D(\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(drag_start_x, drag_start_y)),\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouseX, mouseY))\n                );\n                selectedStrokes = [];\n                for (i = 0; i < drawing.strokes.length; ++i) {\n                    const s = drawing.strokes[i];\n                    if (s.isContainedInRectangle(selectedRectangle)) { selectedStrokes.push(s); }\n                }\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                break;\n        }\n        currentDragMode = DRAG_MODE_NONE;\n        redraw();\n    }\n};\n\nconst mouseMoveHandler = e => {\n    previousMouseX = mouseX;\n    previousMouseY = mouseY;\n    const canvas_rectangle = canvas.getBoundingClientRect();\n    mouseX = e.clientX - canvas_rectangle.left;\n    mouseY = e.clientY - canvas_rectangle.top;\n\n\n    const deltaX = mouseX - previousMouseX;\n    const deltaY = mouseY - previousMouseY;\n\n\n    if (controlMenu.isVisible) {\n        if (controlMenu.isInMenuingMode) {\n            if (controlMenu.dragEvent(mouseX, mouseY)) { redraw(); }\n        } else {\n            // use the drag event to change the appropriate parameter\n            switch (controlMenu.getIDOfSelection()) {\n                case CONTROL_PENCIL:\n                    break;\n                case CONTROL_RECT_SELECT:\n                    break;\n                case CONTROL_MOVE_SELECTION:\n                    const vector = Vector2D.diff(\n                        draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouseX, mouseY)),\n                        draw2.convertPixelsToWorldSpaceUnits(new Vector2D(previousMouseX, previousMouseY))\n                    );\n                    selectedStrokes.forEach(stroke => stroke.translate(vector));\n                    drawing.isBoundingRectangleDirty = true;\n                    break;\n                case CONTROL_TRANSLATE:\n                    draw2.translate(deltaX, deltaY);\n                    break;\n                case CONTROL_ZOOM:\n                    draw2.zoomIn(\n                        zoomFactorPerPixelDragged ** (deltaX - deltaY),\n                        drag_start_x,\n                        drag_start_y\n                    );\n                    break;\n                default:\n                    break;\n            }\n            redraw();\n        }\n    } else if (radialMenu.isVisible) {\n        if (radialMenu.dragEvent(mouseX, mouseY)) { redraw(); }\n    } else if (currentDragMode === DRAG_MODE_TRANSLATE) {\n        draw2.translate(deltaX, deltaY);\n        redraw();\n    } else if (currentDragMode === DRAG_MODE_ZOOM) {\n        draw2.zoomIn(Math.pow(zoomFactorPerPixelDragged, deltaX - deltaY), drag_start_x, drag_start_y);\n        redraw();\n    } else if (currentDragMode === DRAG_MODE_TOOL) {\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                mouseHistory.push(new Vector2D(mouseX, mouseY));\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                break;\n            case TOOL_MODE_MOVE_SELECTION: {\n                const vector = Vector2D.diff(\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouseX, mouseY)),\n                    draw2\n                        .convertPixelsToWorldSpaceUnits(new Vector2D(\n                            previousMouseX,\n                            previousMouseY\n                        ))\n                );\n                selectedStrokes.forEach(stroke => stroke.translate(vector));\n                drawing.isBoundingRectangleDirty = true;\n                break;\n            }\n            default:\n                break;\n        }\n        redraw();\n    } else if (showMouseCoordinates) {\n        redraw();\n    }\n};\n\ncanvas.addEventListener('mousedown', mouseDownHandler);\ncanvas.addEventListener('mouseup', mouseUpHandler);\ncanvas.addEventListener('mousemove', mouseMoveHandler);\ncanvas.oncontextmenu = () => false; // disable the right-click menu\n\n\nwindow.setToolMode = (toolMode, updateRadioButtons = false) => {\n    currentToolMode = toolMode;\n    mouseHistory = [];\n    if (updateRadioButtons) {\n        let idString = 'null';\n        switch (toolMode) {\n            case TOOL_MODE_PENCIL:\n                idString = 'TOOL_MODE_PENCIL';\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                idString = 'TOOL_MODE_RECT_SELECT';\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                idString = 'TOOL_MODE_MOVE_SELECTION';\n                break;\n        }\n        document.getElementById(idString).checked = true;\n    }\n};\n\nwindow.frameAllButtonHandler = () => {\n    draw2.frame(drawing.getBoundingRectangle(), true);\n    redraw();\n};\n\nwindow.deleteSelectionButtonHandler = () => {\n    for (let i = selectedStrokes.length - 1; i >= 0; --i) {\n        const j = drawing.strokes.indexOf(selectedStrokes[i]);\n        if (j >= 0)\n        // this should really be moved into a method in the Drawing prototype\n        { drawing.strokes.splice(j, 1); }\n    }\n    selectedStrokes = [];\n    drawing.isBoundingRectangleDirty = true;\n\n    redraw();\n};\n\nwindow.deleteAllButtonHandler = () => {\n    selectedStrokes = [];\n    // this should really be moved into a method in the Drawing prototype\n    drawing.strokes = [];\n    drawing.isBoundingRectangleDirty = true;\n\n    redraw();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","class Vector2D {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    copy(other) {\n        this.x = other.x;\n        this.y = other.y;\n    }\n\n    negate() {\n        return new Vector2D(-this.x, -this.y);\n    }\n\n    norm() {\n        return Math.sqrt(this.normSquared());\n    }\n\n    normSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    normalize() {\n        const norm = this.norm();\n        if (norm) {\n            const k = 1.0 / norm;\n            return new Vector2D(k * this.x, k * this.y);\n        }\n        return new Vector2D();\n    }\n\n    static sum(vector1, vector2) {\n        return new Vector2D(vector1.x + vector2.x, vector1.y + vector2.y);\n    }\n\n    static diff(vector1, vector2) {\n        return new Vector2D(vector1.x - vector2.x, vector1.y - vector2.y);\n    }\n\n    static multiply(vector, factor) {\n        return new Vector2D(vector.x * factor, vector.y * factor);\n    }\n\n    static dot(vector1, vector2) {\n        return vector1.x * vector2.x + vector1.y * vector2.y;\n    }\n\n    static average(vector1, vector2) {\n        return new Vector2D((vector1.x + vector2.x) * 0.5, (vector1.y + vector2.y) * 0.5);\n    }\n\n    static centroidOfPoints(points) {\n        const { x: centerX, y: centerY } = points.reduce((centroid, point) => Object.assign({\n            x: centroid.x + point.x,\n            y: centroid.y + point.y\n        }), { x: 0, y: 0 });\n        return new Vector2D(\n            points.length ? centerX / points.length : centerX,\n            points.length ? centerY / points.length : centerY\n        );\n    }\n\n    static isPointInsidePolygon(queryPoint, polygon) {\n        if (polygon.length < 3) {\n            return false;\n        }\n\n        let returnValue = false;\n\n        polygon.forEach((cursorPoint, i) => {\n            const previousPoint = polygon[(i || polygon.length) - 1];\n\n            if (\n                (\n                    (\n                        cursorPoint.y < queryPoint.y &&\n                        queryPoint.y < previousPoint.y\n                    ) ||\n                    (\n                        previousPoint.y <= queryPoint.y &&\n                        queryPoint.y < cursorPoint.y\n                    )\n                ) &&\n                queryPoint.x < (\n                    (previousPoint.x - cursorPoint.x) *\n                    (queryPoint.y - cursorPoint.i) /\n                    (previousPoint.y - cursorPoint.y) +\n                    cursorPoint.x\n                )\n            ) {\n                returnValue = !returnValue;\n            }\n        });\n\n        return returnValue;\n    }\n\n    static convexHull(input) {\n        const cross = (o, a, b) =>\n            (a.x - o.x) *\n            (b.y - o.y) -\n            (a.y - o.y) *\n            (b.y - o.x);\n\n        const points = [...input];\n\n        points.sort((a, b) => (a.x === b.x ? a.y - b.y : a.x - b.x));\n\n        const lower = points.reduce((lowerInProgress, point) => {\n            while (\n                lowerInProgress.length >= 2 &&\n                cross(\n                    lowerInProgress[lowerInProgress.length - 2],\n                    lowerInProgress[lowerInProgress.length - 1],\n                    point\n                ) <= 0\n            ) {\n                lowerInProgress.pop();\n            }\n            return [...lowerInProgress, point];\n        }, []);\n\n        const upper = points.reduce((upperInProgress, point) => {\n            while (\n                upperInProgress.length >= 2 &&\n                cross(\n                    upperInProgress[upperInProgress.length - 2],\n                    upperInProgress[upperInProgress.length - 1],\n                    point\n                ) <= 0) {\n                upperInProgress.pop();\n            }\n            return [...upperInProgress, point];\n        }, []);\n\n        upper.pop();\n        lower.pop();\n\n        return [...lower, ...upper];\n    }\n\n    static computeExpandedPolygon(inputPoints, marginThickness) {\n        if (!inputPoints.length) {\n            return [];\n        } else if (inputPoints.length === 1) {\n            return Vector2D.computeExpandedPolygonForOnePoint(inputPoints[0], marginThickness);\n        } else if (inputPoints.length === 2) {\n            return Vector2D.computeExpandedPolygonForTwoPoint(inputPoints, marginThickness);\n        }\n        return Vector2D.computeExpandedPolygonForMultiPoints(inputPoints, marginThickness);\n    }\n\n    static computeExpandedPolygonForOnePoint(point, marginThickness) {\n        return [\n            new Vector2D(point.x - marginThickness, point.y),\n            new Vector2D(point.x, point.y - marginThickness),\n            new Vector2D(point.x + marginThickness, point.y),\n            new Vector2D(point.x, point.y + marginThickness)\n        ];\n    }\n\n    static computeExpandedPolygonForTwoPoint([point0, point1], marginThickness) {\n        const vector0 = Vector2D.multiply(\n            Vector2D.diff(point0, point1).normalize(),\n            marginThickness\n        );\n\n        const vector1 = new Vector2D(-vector0.y, vector0.x);\n\n        return [\n            Vector2D.sum(point0, vector1),\n            Vector2D.sum(point0, vector0.negate()),\n            Vector2D.sum(point0, vector1.negate()),\n            Vector2D.sum(point1, vector1.negate()),\n            Vector2D.sum(point1, vector0),\n            Vector2D.sum(point1, vector1)\n        ];\n    }\n\n    static computeExpandedPolygonForMultiPoints(points, marginThickness) {\n        return points.reduce((expandedPolygon, cursorPoint, i) => {\n            const previousPoint = points[(i || points.length) - 1];\n            const nextPoint = points[(i + 1) % points.length];\n            const previousVector = Vector2D.diff(cursorPoint, previousPoint).normalize();\n            const nextVector = Vector2D.diff(cursorPoint, nextPoint).normalize();\n\n            return [\n                ...expandedPolygon,\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply([\n                        previousVector.y,\n                        -previousVector.x\n                    ], marginThickness)\n                ),\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply(Vector2D.sum(\n                        nextVector,\n                        previousVector\n                    ).normalize(), marginThickness)\n                ),\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply([\n                        -nextVector.y,\n                        nextVector.x\n                    ], marginThickness)\n                )\n            ];\n        }, []);\n    }\n}\n\nexport default Vector2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Vector2D.js","import Vector2D from './Vector2D';\nimport Box2D from './Box2D';\n\nlet pixels = 'pixels';\nlet world = 'world';\nclass Draw2D {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.canvasContext = canvas.getContext('2d');\n        this.canvasWidth_pixels = canvas.width;\n        this.canvasHeight_pixels = canvas.height;\n        this.offsetXPixels = 0;\n        this.offsetYPixels = 0;\n        this.scaleFactorInWorldSpaceUnitsPerPixel = 1.0; // greater if user is more zoomed out\n        this.setFont(this.canvasContext.font);\n        this.coordinateSystem = Draw2D.PIXELS;\n    }\n\n    static get PIXELS() {\n        return pixels;\n    }\n\n    static set PIXELS(input) {\n        pixels = input;\n    }\n\n    static get WORLD() {\n        return world;\n    }\n\n    static set WORLD(input) {\n        world = input;\n    }\n\n    setFont(fontName) {\n        this.canvasContext.font = fontName;\n        this.fontHeight = parseInt(this.canvasContext.font.match(/\\d+/)[0], 10);\n    }\n\n    setFontHeight(fontHeight) {\n        this.canvasContext.font = `${fontHeight.toString()}px sans-serif`;\n        this.fontHeight = parseInt(this.canvasContext.font.match(/\\d+/)[0], 10);\n    }\n\n    convertPixelsToWorldSpaceUnitsX(xPixels) {\n        return (xPixels - this.offsetXPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel;\n    }\n\n    convertPixelsToWorldSpaceUnitsY(yPixels) {\n        return (yPixels - this.offsetYPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel;\n    }\n\n    convertPixelsToWorldSpaceUnits(pointPixels) {\n        return new Vector2D(\n            (pointPixels.x - this.offsetXPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel,\n            (pointPixels.y - this.offsetYPixels) * this.scaleFactorInWorldSpaceUnitsPerPixel\n        );\n    }\n\n    convertWorldSpaceUnitsToPixelsX(xWorld) {\n        return xWorld / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetXPixels;\n    }\n\n    convertWorldSpaceUnitsToPixelsY(yWorld) {\n        return yWorld / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetYPixels;\n    }\n\n    convertWorldSpaceUnitsToPixels(pointWorld) {\n        return new Vector2D(\n            pointWorld.x / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetXPixels,\n            pointWorld.y / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetYPixels\n        );\n    }\n\n    translate(deltaXPixels, deltaYPixels) {\n        this.offsetXPixels += deltaXPixels;\n        this.offsetYPixels += deltaYPixels;\n    }\n\n    zoomIn(\n        zoomFactor,\n        centerXPixels,\n        centerYPixels\n    ) {\n        this.scaleFactorInWorldSpaceUnitsPerPixel /= zoomFactor;\n        this.offsetXPixels = centerXPixels - (centerXPixels - this.offsetXPixels) * zoomFactor;\n        this.offsetYPixels = centerYPixels - (centerYPixels - this.offsetYPixels) * zoomFactor;\n    }\n\n    zoomInAroundCenterOfCanvas(zoomFactor) {\n        this.zoomIn(zoomFactor, this.canvasWidth_pixels * 0.5, this.canvasHeight_pixels * 0.5);\n    }\n\n    translateAndZoomBasedOnDisplacementOfTwoFingers(aOld, bOld, aNew, bNew) {\n        const M1 = Vector2D.average(aOld, bOld);\n        const M2 = Vector2D.average(aNew, bNew);\n\n        const translation = Vector2D.diff(M2, M1);\n\n        const vector0 = Vector2D.diff(aOld, bOld);\n        const vector1 = Vector2D.diff(aNew, bNew);\n\n        const vector0Length = vector0.norm();\n        const vector1Length = vector1.norm();\n        let scaleFactor = 1;\n        if (vector0Length > 0 && vector1Length > 0) { scaleFactor = vector1Length / vector0Length; }\n        this.translate(translation.x, translation.y);\n        this.zoomIn(scaleFactor, M2.x, M2.y);\n    }\n\n    frame(originalRect, expand) {\n        if (\n            originalRect.isEmpty ||\n            originalRect.diagonal().x === 0 ||\n            originalRect.diagonal().y === 0\n        ) {\n            return;\n        }\n        let rect = originalRect;\n        if (expand) {\n            const diagonal = rect.diagonal().norm() / 20;\n            const vector = new Vector2D(diagonal, diagonal);\n            rect = new Box2D(Vector2D.diff(rect.min, vector), Vector2D.sum(rect.max, vector));\n        }\n        if (rect.width() / rect.height() >= this.canvasWidth_pixels / this.canvasHeight_pixels) {\n            // The rectangle to frame is wider (or shorter) than the canvas,\n            // so the limiting factor is the width of the rectangle.\n            this.offsetXPixels = -rect.min.x * this.canvasWidth_pixels / rect.width();\n            this.scaleFactorInWorldSpaceUnitsPerPixel = rect.width() / this.canvasWidth_pixels;\n            this.offsetYPixels =\n                this.canvasHeight_pixels / 2 -\n                rect.center().y / this.scaleFactorInWorldSpaceUnitsPerPixel;\n        } else {\n            // The limiting factor is the height of the rectangle.\n            this.offsetYPixels = -rect.min.y * this.canvasHeight_pixels / rect.height();\n            this.scaleFactorInWorldSpaceUnitsPerPixel = rect.height() / this.canvasHeight_pixels;\n            this.offsetXPixels =\n                this.canvasWidth_pixels / 2 -\n                rect.center().x / this.scaleFactorInWorldSpaceUnitsPerPixel;\n        }\n    }\n\n    resize(width, height) {\n        const oldCenter = this\n            .convertPixelsToWorldSpaceUnits(new Vector2D(\n                this.canvasWidth_pixels * 0.5,\n                this.canvasHeight_pixels * 0.5\n            ));\n        const radius =\n            Math.min(this.canvasWidth_pixels, this.canvasHeight_pixels) *\n            0.5 *\n            this.scaleFactorInWorldSpaceUnitsPerPixel;\n\n        this.canvasWidth_pixels = width;\n        this.canvasHeight_pixels = height;\n\n        if (radius > 0) {\n            this.frame(\n                new Box2D(\n                    new Vector2D(oldCenter.x - radius, oldCenter.y - radius),\n                    new Vector2D(oldCenter.x + radius, oldCenter.y + radius)\n                ),\n                false\n            );\n        }\n    }\n\n    setCoordinateSystemToPixels() {\n        this.coordinateSystem = Draw2D.PIXELS;\n    }\n\n    setCoordinateSystemToWorldSpaceUnits() {\n        this.coordinateSystem = Draw2D.WORLD;\n    }\n\n    setStrokeColor(red, green, blue, alpha = 1.0) {\n        if (alpha === 1.0) {\n            this.canvasContext.strokeStyle = `rgb(${red},${green},${blue})`;\n        } else {\n            this.canvasContext.strokeStyle = `rgba(${red},${green},${blue},${alpha})`;\n        }\n    }\n\n    setFillColor(red, green, blue, alpha = 1.0) {\n        if (alpha === 1.0) {\n            this.canvasContext.fillStyle = `rgb(${red},${green},${blue})`;\n        } else {\n            this.canvasContext.fillStyle = `rgba(${red},${green},${blue},${alpha})`;\n        }\n    }\n\n    setLineWidth(lw) {\n        this.canvasContext.lineWidth = lw;\n    }\n\n    clear(red, green, blue) {\n        this.setFillColor(red, green, blue);\n        this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    drawLine(x1, y1, x2, y2) {\n        if (this.coordinateSystem === Draw2D.WORLD) {\n            this.contextedDrawLine(\n                this.convertWorldSpaceUnitsToPixelsX(x1),\n                this.convertWorldSpaceUnitsToPixelsY(y1),\n                this.convertWorldSpaceUnitsToPixelsX(x2),\n                this.convertWorldSpaceUnitsToPixelsY(y2)\n            );\n        } else {\n            this.contextedDrawLine(x1, y1, x2, y2);\n        }\n    }\n\n    contextedDrawLine(x1, y1, x2, y2) {\n        this.canvasContext.beginPath();\n        this.canvasContext.moveTo(x1, y1);\n        this.canvasContext.lineTo(x2, y2);\n        this.canvasContext.stroke();\n    }\n\n    drawRect(unsignedX, unsignedY, unsignedWidth, unsignedHeight, isFilled = false) {\n        const {\n            height,\n            width,\n            x,\n            y\n        } = Draw2D.getRectSignedCoords(\n            unsignedX,\n            unsignedY,\n            unsignedWidth,\n            unsignedHeight\n        );\n        if (this.coordinateSystem === Draw2D.WORLD) {\n            this.contextedDrawRect(\n                this.convertWorldSpaceUnitsToPixelsX(x),\n                this.convertWorldSpaceUnitsToPixelsY(y),\n                this.scaleFactorInWorldSpaceUnitsPerPixel,\n                this.scaleFactorInWorldSpaceUnitsPerPixel,\n                isFilled\n            );\n        } else {\n            this.contextedDrawRect(x, y, width, height, isFilled);\n        }\n    }\n\n    contextedDrawRect(x, y, width, height, isFilled) {\n        if (isFilled) {\n            this.canvasContext.fillRect(x, y, width, height);\n        } else {\n            this.canvasContext.strokeRect(x, y, width, height);\n        }\n    }\n\n    static getRectSignedCoords(x, y, width, height) {\n        return {\n            height: height < 0 ? -height : height,\n            width: width < 0 ? -width : width,\n            x: width < 0 ? x + width : x,\n            y: height < 0 ? y + height : y\n        };\n    }\n\n    fillRect(x, y, w, h) {\n        this.drawRect(x, y, w, h, true);\n    }\n\n    drawCircle(xCenter, yCenter, radius, isFilled = false) {\n        if (this.coordinateSystem === Draw2D.WORLD) {\n            this.contextedDrawCircle(\n                this.convertWorldSpaceUnitsToPixelsX(xCenter),\n                this.convertWorldSpaceUnitsToPixelsY(yCenter),\n                radius / this.scaleFactorInWorldSpaceUnitsPerPixel,\n                isFilled\n            );\n        } else {\n            this.contextedDrawCircle(xCenter, yCenter, radius, isFilled);\n        }\n    }\n\n    contextedDrawCircle(xCenter, yCenter, radius, isFilled = false) {\n        this.canvasContext.beginPath();\n        this.canvasContext.arc(xCenter, yCenter, radius, 0, 2 * Math.PI, false);\n\n        if (isFilled) {\n            this.canvasContext.fill();\n        } else {\n            this.canvasContext.stroke();\n        }\n    }\n\n    fillCircle(xCenter, yCenter, radius) {\n        this.drawCircle(xCenter, yCenter, radius, true);\n    }\n\n    drawPolyline(points, isFilled = false, isClosed = false) {\n        if (points.length < 2) {\n            return;\n        }\n        this.canvasContext.beginPath();\n        points.forEach((point, i) => {\n            let { x, y } = point;\n            if (this.coordinateSystem === Draw2D.WORLD) {\n                x = this.convertWorldSpaceUnitsToPixelsX(x);\n                y = this.convertWorldSpaceUnitsToPixelsY(y);\n            }\n            this.canvasContext[`${i ? 'line' : 'move'}To`](x, y);\n        });\n        if (isClosed) {\n            this.canvasContext.closePath();\n        }\n        if (isFilled) {\n            this.canvasContext.fill();\n        } else {\n            this.canvasContext.stroke();\n        }\n    }\n\n    drawPolygon(points, isFilled = false) {\n        this.drawPolyline(points, isFilled, true);\n    }\n\n    fillPolygon(points) {\n        this.drawPolyline(points, true, true);\n    }\n\n    stringWidth(s) {\n        if (s.length === 0) return 0;\n        return this.canvasContext.measureText(s).width;\n    }\n\n    drawString(x, y, s) {\n        if (s.length === 0) return;\n        this.canvasContext.fillText(s, x, y);\n    }\n}\n\nexport default Draw2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Draw2D.js","import Vector2D from './Vector2D';\n\nclass Box2D {\n    constructor(vectorMin, vectorMax) {\n        this.isEmpty = true;\n        this.min = new Vector2D();\n        this.max = new Vector2D();\n        if (vectorMin && vectorMax) {\n            this.boundPoint(vectorMin);\n            this.boundPoint(vectorMax);\n        }\n    }\n\n    clear() {\n        this.isEmpty = true;\n        this.min = new Vector2D();\n        this.max = new Vector2D();\n    }\n\n    center() {\n        return Vector2D.average(this.min, this.max);\n    }\n\n    diagonal() {\n        return Vector2D.diff(this.max, this.min);\n    }\n\n    width() {\n        return this.max.x - this.min.x;\n    }\n\n    height() {\n        return this.max.y - this.min.y;\n    }\n\n    containsPoint(point) {\n        return !(\n            this.isEmpty ||\n            point.x < this.min.x ||\n            point.x > this.max.x ||\n            point.y < this.min.y ||\n            point.y > this.max.y\n        );\n    }\n\n    containsBox(box) {\n        if (this.isEmpty) {\n            return false;\n        }\n        if (box.isEmpty) {\n            return true;\n        }\n\n        return this.min.x <= box.min.x &&\n            box.max.x <= this.max.x &&\n            this.min.y <= box.min.y &&\n            box.max.y <= this.max.y;\n    }\n\n    boundPoint(vector) {\n        if (this.isEmpty) {\n            this.isEmpty = false;\n            this.min.copy(vector);\n            this.max.copy(vector);\n        } else {\n            if (vector.x < this.min.x) {\n                this.min.x = vector.x;\n            } else if (vector.x > this.max.x) {\n                this.max.x = vector.x;\n            }\n\n            if (vector.y < this.min.y) {\n                this.min.y = vector.y;\n            } else if (vector.y > this.max.y) {\n                this.max.y = vector.y;\n            }\n        }\n    }\n\n    boundPoints(points) {\n        points.forEach(point => this.boundPoint(point));\n    }\n\n    boundBox(box) {\n        if (!box.isEmpty) {\n            this.boundPoint(box.min);\n            this.boundPoint(box.max);\n        }\n    }\n}\n\nexport default Box2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Box2D.js","class RadialMenu {\n    constructor() {\n        this.label = new Array(8).map(() => '');\n        this.isEnabled = new Array(8).map(() => true);\n        this.itemID = new Array(8).map((cell, i) => i);\n\n        this.selectedItem = 0;\n\n        this.x0 = 0;\n        this.y0 = 0;\n\n        this.mouseX = 0;\n        this.mouseY = 0;\n\n        this.isVisible = false;\n    }\n\n    static get CENTRAL_ITEM() {\n        return 0;\n    }\n\n    static get NORTH() {\n        return 1;\n    }\n\n    static get NORTH_EAST() {\n        return 2;\n    }\n\n    static get EAST() {\n        return 3;\n    }\n\n    static get SOUTH_EAST() {\n        return 4;\n    }\n\n    static get SOUTH() {\n        return 5;\n    }\n\n    static get SOUTH_WEST() {\n        return 6;\n    }\n\n    static get WEST() {\n        return 7;\n    }\n\n    static get NORTH_WEST() {\n        return 8;\n    }\n\n    static get N() {\n        return 8;\n    }\n\n    static get FOREGROUND_1() {\n        return 0;\n    }\n\n    static get FOREGROUND_2() {\n        return 127;\n    }\n\n    static get BACKGROUND() {\n        return 255;\n    }\n\n    static get MENU_ALPHA() {\n        return 0.6;\n    }\n\n    static get radiusOfNeutralZone() {\n        return 10;\n    }\n\n    static get textHeight() {\n        return 20;\n    }\n\n    static get marginAroundText() {\n        return 6;\n    }\n\n    static get marginBetweenItems() {\n        return 6;\n    }\n\n    setItemLabelAndID(index, label, id) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            this.label[index] = label;\n            this.itemID[index] = id;\n        }\n    }\n\n    setItemLabel(index, label) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            this.label[index] = label;\n        }\n    }\n\n    getItemID(index) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            return this.itemID[index];\n        }\n        return -1;\n    }\n\n    setEnabledByID(flag, target) {\n        console.log(target);\n        this.itemID.forEach((id, i) => {\n            if (target === id) {\n                this.isEnabled[i] = flag;\n            }\n        });\n    }\n\n    isItemHilited(index) {\n        return this.itemID[index] === this.itemID[this.selectedItem];\n    }\n\n    getSelection() {\n        return this.selectedItem;\n    }\n\n    getIDOfSelection() {\n        return this.getItemID(this.selectedItem);\n    }\n\n    pressEvent(x, y) {\n        this.x0 = x;\n        this.mouseX = x;\n        this.y0 = y;\n        this.mouseY = y;\n        this.selectedItem = RadialMenu.CENTRAL_ITEM;\n        this.isVisible = true;\n        return true;\n    }\n\n    releaseEvent() {\n        if (this.isVisible) {\n            this.isVisible = false;\n            return true;\n        }\n        return false;\n    }\n\n    moveEvent(x, y) {\n        if (!this.isVisible) {\n            return false;\n        }\n        this.x0 = x;\n        this.mouseX = x;\n        this.y0 = y;\n        this.mouseY = y;\n        return true;\n    }\n\n    dragEvent(x, y) {\n        if (!this.isVisible) {\n            return false;\n        }\n\n        this.mouseX = x;\n        this.mouseY = y;\n        const dx = this.mouseX - this.x0;\n        const dy = this.mouseY - this.y0;\n        const radius = Math.sqrt(dx * dx + dy * dy);\n\n        let newlySelectedItem = RadialMenu.CENTRAL_ITEM;\n\n        if (radius > RadialMenu.radiusOfNeutralZone) {\n            let theta = Math.asin(dy / radius);\n\n            if (dx < 0) {\n                theta = Math.PI - theta;\n            }\n\n            theta += 5 * Math.PI / 8;\n\n            console.assert(theta > 0);\n            if (theta > 2 * Math.PI) {\n                theta -= 2 * Math.PI;\n            }\n\n            newlySelectedItem = 1 + Math.floor(theta / (Math.PI / 4));\n            console.assert(newlySelectedItem >= 1 && newlySelectedItem <= RadialMenu.N);\n\n            if (\n                this.label[newlySelectedItem] &&\n                (\n                    this.label[newlySelectedItem].length === 0 ||\n                    !this.isEnabled[newlySelectedItem]\n                )\n            ) {\n                let minDifference = 4 * Math.PI;\n                let itemWithMinDifference = RadialMenu.CENTRAL_ITEM;\n                this.itemID.forEach((id, candidateItem) => {\n                    if (this.label[candidateItem].length > 0 && this.isEnabled[candidateItem]) {\n                        const candidateItemTheta =\n                            (candidateItem - 1) *\n                            (Math.PI / 4) +\n                            Math.PI / 8;\n\n                        let candidateDifference = Math.abs(candidateItemTheta - theta);\n                        if (candidateDifference > Math.PI) {\n                            candidateDifference = 2 * Math.PI - candidateDifference;\n                        }\n\n                        if (candidateDifference < minDifference) {\n                            minDifference = candidateDifference;\n                            itemWithMinDifference = candidateItem;\n                        }\n                    }\n                });\n\n                newlySelectedItem = itemWithMinDifference;\n            }\n        }\n\n        if (newlySelectedItem !== this.selectedItem) {\n            this.selectedItem = newlySelectedItem;\n            return true;\n        }\n\n        return false;\n    }\n\n    drawMenuItems(draw2D, drawOnlyHilitedItem, drawUsingPieStyle, radiusOfPie) {\n        if (drawUsingPieStyle) {\n            draw2D.setFillColor(\n                RadialMenu.FOREGROUND_2,\n                RadialMenu.FOREGROUND_2,\n                RadialMenu.FOREGROUND_2,\n                RadialMenu.MENU_ALPHA\n            );\n\n            draw2D.fillCircle(this.x0, this.y0, radiusOfPie);\n        }\n\n        if (this.isItemHilited(RadialMenu.CENTRAL_ITEM)) {\n            draw2D.setFillColor(\n                RadialMenu.FOREGROUND_1,\n                RadialMenu.FOREGROUND_1,\n                RadialMenu.FOREGROUND_1,\n                RadialMenu.MENU_ALPHA\n            );\n        } else {\n            draw2D.setFillColor(\n                RadialMenu.BACKGROUND,\n                RadialMenu.BACKGROUND,\n                RadialMenu.BACKGROUND,\n                RadialMenu.MENU_ALPHA\n            );\n        }\n        draw2D.fillCircle(this.x0, this.y0, RadialMenu.radiusOfNeutralZone);\n        if (!this.isItemHilited(RadialMenu.CENTRAL_ITEM)) {\n            draw2D.setStrokeColor(\n                RadialMenu.FOREGROUND_1,\n                RadialMenu.FOREGROUND_1,\n                RadialMenu.FOREGROUND_1\n            );\n        } else {\n            draw2D.setStrokeColor(\n                RadialMenu.BACKGROUND,\n                RadialMenu.BACKGROUND,\n                RadialMenu.BACKGROUND\n            );\n        }\n        draw2D.drawCircle(this.x0, this.y0, RadialMenu.radiusOfNeutralZone);\n        const heightOfItem = RadialMenu.textHeight + 2 * RadialMenu.marginAroundText;\n        const radius = 2 * (heightOfItem + RadialMenu.marginBetweenItems);\n        const radiusPrime = radius / Math.SQRT2;\n\n        this.itemID.forEach((id, i) => {\n            console.log(this.isEnabled, i);\n            if (this.label[i].length > 0 && this.isEnabled[i]) {\n                const theta = (i - 1) * Math.PI / 4 - Math.PI / 2;\n                // compute center of ith label\n                let x = ((i % 2) === 1 ? radius : radiusPrime) * Math.cos(theta) + this.x0;\n                let y = ((i % 2) === 1 ? radius : radiusPrime) * Math.sin(theta) + this.y0;\n\n                if (i === 1 && this.label[2].length === 0 && this.label[8].length === 0) {\n                    y = -radius / 2 + this.y0;\n                } else if (i === 5 && this.label[4].length === 0 && this.label[6].length === 0) {\n                    y = radius / 2 + this.y0;\n                }\n\n                const stringWidth = draw2D.stringWidth(this.label[i]);\n                let widthOfItem = stringWidth + 2 * RadialMenu.marginAroundText;\n\n                // We want items that appear side-by-side to have the same width,\n                // so that the menu is symmetrical about a vertical axis.\n                if (i !== 1 && i !== 5 && this.label[this.itemID.length + 2 - i].length > 0) {\n                    const otherStringWidth = draw2D\n                        .stringWidth(this.label[this.itemID.length + 2 - i]);\n                    if (otherStringWidth > stringWidth) {\n                        widthOfItem = otherStringWidth + 2 * RadialMenu.marginAroundText;\n                    }\n                }\n\n                if (\n                    (i === 2 || i === 4) &&\n                    x - widthOfItem / 2 <= this.x0 + RadialMenu.marginBetweenItems\n                ) {\n                    x = this.x0 + RadialMenu.marginBetweenItems + widthOfItem / 2;\n                } else if (\n                    i === 3 &&\n                    (\n                        x - widthOfItem / 2 <=\n                        this.x0 + RadialMenu.radiusOfNeutralZone + RadialMenu.marginBetweenItems\n                    )\n                ) {\n                    x =\n                        this.x0 +\n                        RadialMenu.radiusOfNeutralZone +\n                        RadialMenu.marginBetweenItems +\n                        widthOfItem / 2;\n                } else if (\n                    (i === 6 || i === 8) &&\n                    x + widthOfItem / 2 >= this.x0 - RadialMenu.marginBetweenItems\n                ) {\n                    x = this.x0 - RadialMenu.marginBetweenItems - widthOfItem / 2;\n                } else if (\n                    i === 7 &&\n                    (\n                        x + widthOfItem / 2 >=\n                        this.x0 - RadialMenu.radiusOfNeutralZone - RadialMenu.marginBetweenItems\n                    )\n                ) {\n                    x =\n                        this.x0 -\n                        RadialMenu.radiusOfNeutralZone -\n                        RadialMenu.marginBetweenItems -\n                        widthOfItem / 2;\n                }\n\n                if (this.isItemHilited(i)) {\n                    draw2D.setFillColor(\n                        RadialMenu.FOREGROUND_1,\n                        RadialMenu.FOREGROUND_1,\n                        RadialMenu.FOREGROUND_1,\n                        RadialMenu.MENU_ALPHA\n                    );\n                } else {\n                    draw2D.setFillColor(\n                        RadialMenu.BACKGROUND,\n                        RadialMenu.BACKGROUND,\n                        RadialMenu.BACKGROUND,\n                        RadialMenu.MENU_ALPHA\n                    );\n                }\n                draw2D.fillRect(\n                    x - widthOfItem / 2, y - heightOfItem / 2,\n                    widthOfItem, heightOfItem\n                );\n                if (!this.isItemHilited(i)) {\n                    draw2D.setStrokeColor(\n                        RadialMenu.FOREGROUND_1,\n                        RadialMenu.FOREGROUND_1,\n                        RadialMenu.FOREGROUND_1\n                    );\n                    draw2D.setFillColor(\n                        RadialMenu.FOREGROUND_1,\n                        RadialMenu.FOREGROUND_1,\n                        RadialMenu.FOREGROUND_1\n                    );\n                } else {\n                    draw2D.setStrokeColor(\n                        RadialMenu.BACKGROUND,\n                        RadialMenu.BACKGROUND,\n                        RadialMenu.BACKGROUND\n                    );\n                    draw2D.setFillColor(\n                        RadialMenu.BACKGROUND,\n                        RadialMenu.BACKGROUND,\n                        RadialMenu.BACKGROUND\n                    );\n                }\n\n                draw2D.drawRect(\n                    x - widthOfItem / 2, y - heightOfItem / 2,\n                    widthOfItem, heightOfItem\n                );\n\n                draw2D.drawString(\n                    x - stringWidth / 2,\n                    y + RadialMenu.textHeight / 2,\n                    this.label[i]\n                );\n            }\n        });\n    }\n\n    draw(draw2D) {\n        if (!this.isVisible) {\n            return;\n        }\n        this.drawMenuItems(draw2D, false, false, 0);\n    }\n}\n\nexport default RadialMenu;\n\n\n\n// WEBPACK FOOTER //\n// ./src/RadialMenu.js"],"sourceRoot":""}