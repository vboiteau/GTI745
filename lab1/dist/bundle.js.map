{"version":3,"sources":["webpack:///webpack/bootstrap ae519cbf619361a59463","webpack:///./src/main.js","webpack:///./src/Vector2D.js"],"names":["Box2","vec2_min","vec2_max","isEmpty","min","max","boundPoint","prototype","clear","center","average","diagonal","diff","width","x","height","y","containsPoint","q","containsBox","b","vec2","copy","boundPoints","points","i","length","boundBox","box","Draw2","canvas","canvas_context","getContext","canvasWidth_pixels","canvasHeight_pixels","offsetX_pixels","offsetY_pixels","scaleFactorInWorldSpaceUnitsPerPixel","setFont","font","coordinateSystem","PIXELS","WORLD","fontName","fontHeight","parseInt","match","setFontHeight","toString","convertPixelsToWorldSpaceUnitsX","x_pixels","convertPixelsToWorldSpaceUnitsY","y_pixels","convertPixelsToWorldSpaceUnits","p_pixels","convertWorldSpaceUnitsToPixelsX","x_world","convertWorldSpaceUnitsToPixelsY","y_world","convertWorldSpaceUnitsToPixels","p_world","translate","deltaX_pixels","deltaY_pixels","zoomIn","zoomFactor","centerX_pixels","centerY_pixels","zoomInAroundCenterOfCanvas","translateAndZoomBasedOnDisplacementOfTwoFingers","A_old","B_old","A_new","B_new","M1","M2","translation","v1","v2","v1_length","norm","v2_length","scaleFactor","frame","rect","expand","v","sum","resize","w","h","oldCenter","radius","Math","setCoordinateSystemToPixels","setCoordinateSystemToWorldSpaceUnits","setStrokeColor","red","green","blue","alpha","strokeStyle","setFillColor","fillStyle","setLineWidth","lw","lineWidth","fillRect","drawLine","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","drawRect","isFilled","strokeRect","drawCircle","x_center","y_center","arc","PI","fill","fillCircle","drawPolyline","isClosed","closePath","drawPolygon","fillPolygon","stringWidth","s","measureText","drawString","fillText","RadialMenu","label","isEnabled","itemID","N","selectedItem","x0","y0","mouse_x","mouse_y","isVisible","CENTRAL_ITEM","NORTH","NORTH_EAST","EAST","SOUTH_EAST","SOUTH","SOUTH_WEST","WEST","NORTH_WEST","FOREGROUND_1","FOREGROUND_2","BACKGROUND","MENU_ALPHA","radiusOfNeutralZone","textHeight","marginAroundText","marginBetweenItems","setItemLabelAndID","index","id","setItemLabel","getItemID","setEnabledByID","flag","isItemHilited","console","assert","getSelection","getIDOfSelection","pressEvent","releaseEvent","moveEvent","dragEvent","dx","dy","sqrt","newlySelectedItem","theta","asin","floor","minDifference","itemWithMinDifference","candidateItem","candidateItemTheta","candidateDifference","abs","drawMenuItems","draw2","drawOnlyHilitedItem","drawUsingPieStyle","radiusOfPie","fg1","fg2","bg","heightOfItem","radiusPrime","SQRT2","cos","sin","widthOfItem","otherStringWidth","draw","ControlMenu","isInMenuingMode","call","returnValue","distanceSquared","normSquared","menuRadius","Stroke","boundingRectangle","isBoundingRectangleDirty","pushPoint","push","getBoundingRectangle","isContainedInRectangle","rectangle","isContainedInLassoPolygon","polygonPoints","isPointInsidePolygon","p","rotate","angle","sine","cosine","delta_x","delta_y","new_x","new_y","Drawing","strokes","pushStroke","document","getElementById","drawing","radialMenu","controlMenu","selectedStrokes","previous_mouse_x","previous_mouse_y","drag_start_x","drag_start_y","mouseHistory","zoomFactorPerPixelDragged","showMouseCoordinates","TOOL_MODE_PENCIL","TOOL_MODE_RECT_SELECT","TOOL_MODE_MOVE_SELECTION","NUM_TOOL_MODES","currentToolMode","DRAG_MODE_NONE","DRAG_MODE_TRANSLATE","DRAG_MODE_ZOOM","DRAG_MODE_TOOL","currentDragMode","CONTROL_NONE","CONTROL_PENCIL","CONTROL_RECT_SELECT","CONTROL_MOVE_SELECTION","CONTROL_TRANSLATE","CONTROL_ZOOM","redraw","r","parseFloat","toFixed","BUTTON_LEFT","BUTTON_MIDDLE","BUTTON_RIGHT","BUTTONS_BIT_LEFT","BUTTONS_BIT_MIDDLE","BUTTONS_BIT_RIGHT","mouseDownHandler","e","canvas_rectangle","getBoundingClientRect","clientX","left","clientY","top","button","shiftKey","ctrlKey","mouseUpHandler","setToolMode","newStroke","selectedRectangle","mouseMoveHandler","pow","addEventListener","oncontextmenu","toolMode","updateRadioButtons","idString","checked","frameAllButtonHandler","deleteSelectionButtonHandler","j","indexOf","splice","deleteAllButtonHandler","Vector2D","other","k","vector1","vector2","vector","factor","reduce","centroid","point","Object","assign","centerX","centerY","queryPoint","polygon","forEach","cursorPoint","previousPoint","input","cross","o","a","sort","lower","lowerInProgress","pop","upper","upperInProgress","inputPoints","marginThickness","computeExpandedPolygonForOnePoint","computeExpandedPolygonForTwoPoint","computeExpandedPolygonForMultiPoints","point0","point1","vector0","multiply","normalize","negate","expandedPolygon","nextPoint","previousVector","nextVector"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae519cbf619361a59463","import Vector2D from './Vector2D';\n\n// ============================================================\n// Box2 objects are for storing 2D axis-aligned rectangles.\n// To create a new instance, use the new keyword:\n//    var box_a = new Box2();\n//    var box_b = new Box2(new Vector2D(-10,-10),new Vector2D(10,10));\n// ============================================================\n\nfunction Box2(vec2_min = null, vec2_max = null) {\n    // Internally, the min and max points are diagonally opposite,\n    // and are only valid if isEmpty===false.\n    // Below, we initialize things based on what the client passed in.\n\n    this.isEmpty = true;\n    this.min = new Vector2D();\n    this.max = new Vector2D();\n    if (vec2_min !== null && vec2_max !== null) {\n        this.boundPoint(vec2_min);\n        this.boundPoint(vec2_max);\n    }\n}\n\nBox2.prototype = {\n    clear() { this.isEmpty = true; this.min = new Vector2D(); this.max = new Vector2D(); },\n    center() { return Vector2D.average(this.min, this.max); },\n    diagonal() { return Vector2D.diff(this.max, this.min); },\n    width() { return this.max.x - this.min.x; },\n    height() { return this.max.y - this.min.y; },\n    containsPoint(q) {\n        return !(this.isEmpty || q.x < this.min.x || q.x > this.max.x || q.y < this.min.y || q.y > this.max.y);\n    },\n    containsBox(b) {\n        if (this.isEmpty) return false;\n        if (b.isEmpty) return true;\n        return this.min.x <= b.min.x && b.max.x <= this.max.x && this.min.y <= b.min.y && b.max.y <= this.max.y;\n    },\n\n\n    // Enlarges the box enough to contain the given point\n    boundPoint(vec2) {\n        if (this.isEmpty) {\n            this.isEmpty = false;\n            this.min.copy(vec2);\n            this.max.copy(vec2);\n        } else {\n            if (vec2.x < this.min.x) this.min.x = vec2.x;\n            else if (vec2.x > this.max.x) this.max.x = vec2.x;\n\n            if (vec2.y < this.min.y) this.min.y = vec2.y;\n            else if (vec2.y > this.max.y) this.max.y = vec2.y;\n        }\n    },\n    boundPoints(points) {\n        for (let i = 0; i < points.length; ++i) {\n            this.boundPoint(points[i]);\n        }\n    },\n\n    // Enlarges the box enough to contain the given box\n    boundBox(box) {\n        if (!box.isEmpty) {\n            this.boundPoint(box.min);\n            this.boundPoint(box.max);\n        }\n    }\n};\n\n// ============================================================\n// Draw2 objects are for managing the transformation between\n// pixel space and a 2D world space, allowing a client to pan and zoom.\n// The objects also manage the drawing of simple shapes on a canvas,\n// allowing a client to pass in coordinates in either space\n// (pixel space or world space).\n// To create a new instance, use the new keyword:\n//    var draw2 = new Draw2(canvas);\n// ============================================================\n\nfunction Draw2(canvas) {\n    this.canvas = canvas;\n    this.canvas_context = canvas.getContext('2d');\n    this.canvasWidth_pixels = canvas.width;\n    this.canvasHeight_pixels = canvas.height;\n    this.offsetX_pixels = 0;\n    this.offsetY_pixels = 0;\n    this.scaleFactorInWorldSpaceUnitsPerPixel = 1.0; // greater if user is more zoomed out\n    this.setFont(this.canvas_context.font);\n    this.coordinateSystem = Draw2.PIXELS;\n}\n\n// static constants\nDraw2.PIXELS = 'pixels';\nDraw2.WORLD = 'world';\n\nDraw2.prototype = {\n    setFont(fontName/* Example: 'italic 27px Calibri' */) {\n        this.canvas_context.font = fontName;\n        this.fontHeight = parseInt(this.canvas_context.font.match(/\\d+/)[0], 10);\n    },\n    setFontHeight(fontHeight /* in pixels */) {\n        this.canvas_context.font = `${fontHeight.toString()}px sans-serif`;\n        this.fontHeight = parseInt(this.canvas_context.font.match(/\\d+/)[0], 10);\n    },\n\n    convertPixelsToWorldSpaceUnitsX(x_pixels) {\n        return (x_pixels - this.offsetX_pixels) * this.scaleFactorInWorldSpaceUnitsPerPixel;\n    },\n    convertPixelsToWorldSpaceUnitsY(y_pixels) {\n        return (y_pixels - this.offsetY_pixels) * this.scaleFactorInWorldSpaceUnitsPerPixel;\n    },\n    convertPixelsToWorldSpaceUnits(p_pixels) {\n        return new Vector2D(\n            (p_pixels.x - this.offsetX_pixels) * this.scaleFactorInWorldSpaceUnitsPerPixel,\n            (p_pixels.y - this.offsetY_pixels) * this.scaleFactorInWorldSpaceUnitsPerPixel\n        );\n    },\n\n    convertWorldSpaceUnitsToPixelsX(x_world) {\n        return x_world / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetX_pixels;\n    },\n    convertWorldSpaceUnitsToPixelsY(y_world) {\n        return y_world / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetY_pixels;\n    },\n    convertWorldSpaceUnitsToPixels(p_world) {\n        return new Vector2D(\n            p_world.x / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetX_pixels,\n            p_world.y / this.scaleFactorInWorldSpaceUnitsPerPixel + this.offsetY_pixels\n        );\n    },\n\n    // This is for translating, also called scrolling or panning\n    translate(deltaX_pixels, deltaY_pixels) {\n        this.offsetX_pixels += deltaX_pixels;\n        this.offsetY_pixels += deltaY_pixels;\n    },\n\n    zoomIn(\n        zoomFactor, // greater than 1 to zoom in, between 0 and 1 to zoom out\n        centerX_pixels,\n        centerY_pixels\n    ) {\n        this.scaleFactorInWorldSpaceUnitsPerPixel /= zoomFactor;\n        this.offsetX_pixels = centerX_pixels - (centerX_pixels - this.offsetX_pixels) * zoomFactor;\n        this.offsetY_pixels = centerY_pixels - (centerY_pixels - this.offsetY_pixels) * zoomFactor;\n    },\n    zoomInAroundCenterOfCanvas(zoomFactor // greater than 1 to zoom in, between 0 and 1 to zoom out\n    ) {\n        this.zoomIn(zoomFactor, this.canvasWidth_pixels * 0.5, this.canvasHeight_pixels * 0.5);\n    },\n\n    // This can be used to implement bimanual (2-handed) camera control,\n    // or 2-finger camera control, as in a \"pinch\" gesture\n    translateAndZoomBasedOnDisplacementOfTwoFingers(\n        // these are instances of Vector2D in pixel coordinates\n        A_old, B_old,\n        A_new, B_new\n    ) {\n        // Compute midpoints of each pair of points\n        const M1 = Vector2D.average(A_old, B_old);\n        const M2 = Vector2D.average(A_new, B_new);\n\n        // This is the translation that the world should appear to undergo.\n        const translation = Vector2D.diff(M2, M1);\n\n        // Compute a vector associated with each pair of points.\n        const v1 = Vector2D.diff(A_old, B_old);\n        const v2 = Vector2D.diff(A_new, B_new);\n\n        const v1_length = v1.norm();\n        const v2_length = v2.norm();\n        let scaleFactor = 1;\n        if (v1_length > 0 && v2_length > 0) { scaleFactor = v2_length / v1_length; }\n        this.translate(translation.x, translation.y);\n        this.zoomIn(scaleFactor, M2.x, M2.y);\n    },\n\n    // Causes the zoom and translation to be adjusted to fit the given rectangle within the canvas\n    frame(\n        rect, // an instance of Box2; the rectangle (in world space) to frame\n        expand // true if caller wants a margin of whitespace added around the rect\n    ) {\n        if (rect.isEmpty || rect.diagonal().x === 0 || rect.diagonal().y === 0) {\n            return;\n        }\n        if (expand) {\n            const diagonal = rect.diagonal().norm() / 20;\n            const v = new Vector2D(diagonal, diagonal);\n            rect = new Box2(Vector2D.diff(rect.min, v), Vector2D.sum(rect.max, v));\n        }\n        if (rect.width() / rect.height() >= this.canvasWidth_pixels / this.canvasHeight_pixels) {\n            // The rectangle to frame is wider (or shorter) than the canvas,\n            // so the limiting factor is the width of the rectangle.\n            this.offsetX_pixels = -rect.min.x * this.canvasWidth_pixels / rect.width();\n            this.scaleFactorInWorldSpaceUnitsPerPixel = rect.width() / this.canvasWidth_pixels;\n            this.offsetY_pixels = this.canvasHeight_pixels / 2 - rect.center().y / this.scaleFactorInWorldSpaceUnitsPerPixel;\n        } else {\n            // The limiting factor is the height of the rectangle.\n            this.offsetY_pixels = -rect.min.y * this.canvasHeight_pixels / rect.height();\n            this.scaleFactorInWorldSpaceUnitsPerPixel = rect.height() / this.canvasHeight_pixels;\n            this.offsetX_pixels = this.canvasWidth_pixels / 2 - rect.center().x / this.scaleFactorInWorldSpaceUnitsPerPixel;\n        }\n    },\n\n    resize(w, h // the new canvas dimensions, in pixels\n    ) {\n        const oldCenter = this.convertPixelsToWorldSpaceUnits(new Vector2D(this.canvasWidth_pixels * 0.5, this.canvasHeight_pixels * 0.5));\n        const radius = Math.min(this.canvasWidth_pixels, this.canvasHeight_pixels) * 0.5 * this.scaleFactorInWorldSpaceUnitsPerPixel;\n\n        this.canvasWidth_pixels = w;\n        this.canvasHeight_pixels = h;\n\n        if (radius > 0) {\n            this.frame(\n                new Box2(\n                    new Vector2D(oldCenter.x - radius, oldCenter.y - radius),\n                    new Vector2D(oldCenter.x + radius, oldCenter.y + radius)\n                ),\n                false\n            );\n        }\n    },\n\n    setCoordinateSystemToPixels() {\n        this.coordinateSystem = Draw2.PIXELS;\n    },\n    setCoordinateSystemToWorldSpaceUnits() {\n        this.coordinateSystem = Draw2.WORLD;\n    },\n\n    setStrokeColor(\n        red, green, blue, // between 0 and 255\n        alpha = 1.0 // between 0.0 and 1.0\n    ) {\n        if (alpha === 1.0) { this.canvas_context.strokeStyle = `rgb(${red},${green},${blue})`; } else { this.canvas_context.strokeStyle = `rgba(${red},${green},${blue},${alpha})`; }\n    },\n    setFillColor(\n        red, green, blue, // between 0 and 255\n        alpha = 1.0 // between 0.0 and 1.0\n    ) {\n        if (alpha === 1.0) { this.canvas_context.fillStyle = `rgb(${red},${green},${blue})`; } else { this.canvas_context.fillStyle = `rgba(${red},${green},${blue},${alpha})`; }\n    },\n    setLineWidth(lw) {\n        this.canvas_context.lineWidth = lw;\n    },\n    clear(red, green, blue // between 0 and 255\n    ) {\n        this.setFillColor(red, green, blue);\n        this.canvas_context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    },\n    drawLine(x1, y1, x2, y2) {\n        if (this.coordinateSystem === Draw2.WORLD) {\n            x1 = this.convertWorldSpaceUnitsToPixelsX(x1);\n            y1 = this.convertWorldSpaceUnitsToPixelsY(y1);\n            x2 = this.convertWorldSpaceUnitsToPixelsX(x2);\n            y2 = this.convertWorldSpaceUnitsToPixelsY(y2);\n        }\n        this.canvas_context.beginPath();\n        this.canvas_context.moveTo(x1, y1);\n        this.canvas_context.lineTo(x2, y2);\n        this.canvas_context.stroke();\n    },\n    drawRect(x, y, w, h, isFilled = false) {\n        if (w < 0) {\n            w = -w;\n            x -= w;\n        }\n        if (h < 0) {\n            h = -h;\n            y -= h;\n        }\n        if (this.coordinateSystem === Draw2.WORLD) {\n            x = this.convertWorldSpaceUnitsToPixelsX(x);\n            y = this.convertWorldSpaceUnitsToPixelsY(y);\n            w /= this.scaleFactorInWorldSpaceUnitsPerPixel;\n            h /= this.scaleFactorInWorldSpaceUnitsPerPixel;\n        }\n        if (isFilled) this.canvas_context.fillRect(x, y, w, h);\n        else this.canvas_context.strokeRect(x, y, w, h);\n    },\n    fillRect(x, y, w, h) {\n        this.drawRect(x, y, w, h, true);\n    },\n    drawCircle(x_center, y_center, radius, isFilled = false) {\n        if (this.coordinateSystem === Draw2.WORLD) {\n            x_center = this.convertWorldSpaceUnitsToPixelsX(x_center);\n            y_center = this.convertWorldSpaceUnitsToPixelsY(y_center);\n            radius /= this.scaleFactorInWorldSpaceUnitsPerPixel;\n        }\n        this.canvas_context.beginPath();\n        this.canvas_context.arc(x_center, y_center, radius, 0, 2 * Math.PI, false);\n        if (isFilled) this.canvas_context.fill();\n        else this.canvas_context.stroke();\n    },\n    fillCircle(x_center, y_center, radius) {\n        this.drawCircle(x_center, y_center, radius, true);\n    },\n    drawPolyline(points, isFilled = false, isClosed = false) {\n        if (points.length <= 1) { return; }\n        let x;\n        let y;\n        this.canvas_context.beginPath();\n        x = points[0].x;\n        y = points[0].y;\n        if (this.coordinateSystem === Draw2.WORLD) {\n            x = this.convertWorldSpaceUnitsToPixelsX(x);\n            y = this.convertWorldSpaceUnitsToPixelsY(y);\n        }\n        this.canvas_context.moveTo(x, y);\n        for (let i = 1; i < points.length; ++i) {\n            x = points[i].x;\n            y = points[i].y;\n            if (this.coordinateSystem === Draw2.WORLD) {\n                x = this.convertWorldSpaceUnitsToPixelsX(x);\n                y = this.convertWorldSpaceUnitsToPixelsY(y);\n            }\n            this.canvas_context.lineTo(x, y);\n        }\n        if (isClosed) this.canvas_context.closePath();\n        if (isFilled) this.canvas_context.fill();\n        else this.canvas_context.stroke();\n    },\n    drawPolygon(points, isFilled = false) {\n        this.drawPolyline(points, isFilled, true);\n    },\n    fillPolygon(points) {\n        this.drawPolyline(points, true, true);\n    },\n\n    // returns the width of a string, in pixels\n    stringWidth(s) {\n        if (s.length === 0) return 0;\n        return this.canvas_context.measureText(s).width;\n    },\n\n    // draws the given string using the current fill color\n    drawString(\n        x, y, // left extremity of the baseline of the string (near the lower-left corner of the string)\n        s // the string\n    ) {\n        if (s.length === 0) return;\n        this.canvas_context.fillText(s, x, y);\n    }\n};\n\n// ============================================================\n// A radial popup menu.\n// To create a new instance, use the new keyword:\n//    var rm = new RadialMenu();\n// ============================================================\n\nfunction RadialMenu() {\n    // Each menu item has a corresponding ``label'' string.\n    // If a given label string is empty (\"\"),\n    // then there is no menu item displayed for it.\n    // In addition, the client can temporarily deactivate\n    // an existing menu item by setting its ``isEnabled'' flag to false.\n    this.label = []; // array of strings, with index ranging from 0 to N\n    this.isEnabled = []; // array of boolean, with index ranging from 0 to N\n\n    // Each menu item also has a (normally distinct) ID number.\n    // These are useful for causing.multiplyiple items to hilite together:\n    // whenever the user drags over a given item,\n    // it and all other items with the same ID hilite together.\n    // This is intended for cases where there are redundant menu items\n    // that map to the same function in the client's code.\n    this.itemID = []; // array of integers, with index ranging from 0 to N\n\n    const N = 8;\n    for (let i = 0; i <= N; ++i) {\n        this.label[i] = '';\n        this.isEnabled[i] = true;\n\n        // Give every item a distinct ID.\n        this.itemID[i] = i;\n    }\n\n    this.selectedItem = 0; // an integer in the range [CENTRAL_ITEM,N]\n\n    // pixel coordinates of center of menu\n    this.x0 = 0;\n    this.y0 = 0;\n\n    // pixel coordinates of current mouse position\n    this.mouse_x = 0;\n    this.mouse_y = 0;\n\n    this.isVisible = false;\n}\n\n// The radial menu has a central menu item (with index 0)\n// and up to 8 surrounding menu items\n// (with indices 1 through 8, numbered clockwise,\n// with 1 for North, 2 for North-East, ..., 8 for North-West).\nRadialMenu.CENTRAL_ITEM = 0;\nRadialMenu.NORTH = 1;\nRadialMenu.NORTH_EAST = 2;\nRadialMenu.EAST = 3;\nRadialMenu.SOUTH_EAST = 4;\nRadialMenu.SOUTH = 5;\nRadialMenu.SOUTH_WEST = 6;\nRadialMenu.WEST = 7;\nRadialMenu.NORTH_WEST = 8;\nRadialMenu.N = 8;\n\n// colors (shades of gray)\nRadialMenu.FOREGROUND_1 = 0; // foreground 1 is black\nRadialMenu.FOREGROUND_2 = 127; // foreground 2 is 50% gray\nRadialMenu.BACKGROUND = 255; // background is white\nRadialMenu.MENU_ALPHA = 0.6;\n\n// These are in pixels.\nRadialMenu.radiusOfNeutralZone = 10;\nRadialMenu.textHeight = 20;\nRadialMenu.marginAroundText = 6;\nRadialMenu.marginBetweenItems = 6;\n\nRadialMenu.prototype = {\n\n    setItemLabelAndID(index, /* string */ s, id) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            this.label[index] = s;\n            this.itemID[index] = id;\n        }\n    },\n    setItemLabel(index, /* string */ s) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            this.label[index] = s;\n        }\n    },\n    getItemID(index) {\n        if (index >= 0 && index <= RadialMenu.N) {\n            return this.itemID[index];\n        }\n        return -1;\n    },\n\n    setEnabledByID(/* boolean */ flag, id) {\n        for (let i = 0; i <= RadialMenu.N; ++i) {\n            if (this.itemID[i] === id) {\n                this.isEnabled[i] = flag;\n            }\n        }\n    },\n\n    // For internal use only.\n    isItemHilited(index) {\n        console.assert(index >= 0 && index <= RadialMenu.N);\n        return this.itemID[index] === this.itemID[this.selectedItem];\n    },\n\n    // The client typically calls this after an interaction with the menu\n    // is complete, to find out what the user selected.\n    // Returns an index in the range [CENTRAL_ITEM,N]\n    getSelection() { return this.selectedItem; },\n\n    getIDOfSelection() { return this.getItemID(this.selectedItem); },\n\n    // The below methods, that handle mouse events, return true if the client should redraw.\n    pressEvent(x, y) {\n        this.x0 = this.mouse_x = x;\n        this.y0 = this.mouse_y = y;\n        this.selectedItem = RadialMenu.CENTRAL_ITEM;\n        this.isVisible = true;\n        return true;\n    },\n    releaseEvent(x, y) {\n        if (this.isVisible) {\n            this.isVisible = false;\n            return true;\n        }\n        return false;\n    },\n    moveEvent(x, y) {\n        if (!this.isVisible) { return false; }\n        // make the center of the menu follow the cursor\n        this.x0 = this.mouse_x = x;\n        this.y0 = this.mouse_y = y;\n        return true;\n    },\n    dragEvent(x, y) {\n        if (!this.isVisible) { return false; }\n\n        this.mouse_x = x;\n        this.mouse_y = y;\n        const dx = this.mouse_x - this.x0;\n        const dy = this.mouse_y - this.y0;\n        const radius = Math.sqrt(dx * dx + dy * dy);\n\n        let newlySelectedItem = RadialMenu.CENTRAL_ITEM;\n\n        if (radius > RadialMenu.radiusOfNeutralZone) {\n            let theta = Math.asin(dy / radius);\n            if (dx < 0) theta = Math.PI - theta;\n\n            // theta is now relative to the +x axis, which points right,\n            // and increases clockwise (because y+ points down).\n            // If we added pi/2 radians, it would be relative to the -y\n            // axis (which points up).\n            // However, what we really want is for it to be relative to\n            // the radial line that divides item 1 from item 8.\n            // So we must add pi/2 + pi/8 radians.\n\n            theta += 5 * Math.PI / 8;\n\n            // Ensure it's in [0,2*pi]\n            console.assert(theta > 0);\n            if (theta > 2 * Math.PI) theta -= 2 * Math.PI;\n\n            newlySelectedItem = 1 + Math.floor(theta / (Math.PI / 4));\n            console.assert(newlySelectedItem >= 1 && newlySelectedItem <= RadialMenu.N);\n\n            if (this.label[newlySelectedItem].length === 0 || !this.isEnabled[newlySelectedItem]) {\n                // loop over all items, looking for the closest one\n                let minDifference = 4 * Math.PI;\n                let itemWithMinDifference = RadialMenu.CENTRAL_ITEM;\n                for (let candidateItem = 1; candidateItem <= RadialMenu.N; ++candidateItem) {\n                    if (this.label[candidateItem].length > 0 && this.isEnabled[candidateItem]) {\n                        const candidateItemTheta = (candidateItem - 1) * (Math.PI / 4) + Math.PI / 8;\n                        let candidateDifference = Math.abs(candidateItemTheta - theta);\n                        if (candidateDifference > Math.PI) { candidateDifference = 2 * Math.PI - candidateDifference; }\n                        if (candidateDifference < minDifference) {\n                            minDifference = candidateDifference;\n                            itemWithMinDifference = candidateItem;\n                        }\n                    }\n                }\n                newlySelectedItem = itemWithMinDifference;\n            }\n        }\n\n        if (newlySelectedItem !== this.selectedItem) {\n            this.selectedItem = newlySelectedItem;\n            return true;\n        }\n\n        return false;\n    },\n\n    drawMenuItems(\n        draw2,\n        drawOnlyHilitedItem, // boolean; if false, all menu items are drawn\n        drawUsingPieStyle, // boolean\n        radiusOfPie // in pixels; only used if ``drawUsingPieStyle'' is true\n    ) {\n        const fg1 = RadialMenu.FOREGROUND_1;\n        const fg2 = RadialMenu.FOREGROUND_2;\n        const bg = RadialMenu.BACKGROUND;\n        const alpha = RadialMenu.MENU_ALPHA;\n        const N = RadialMenu.N;\n\n        if (drawUsingPieStyle) {\n            draw2.setFillColor(fg2, fg2, fg2, alpha);\n            draw2.fillCircle(this.x0, this.y0, radiusOfPie);\n        }\n\n        if (this.isItemHilited(RadialMenu.CENTRAL_ITEM)) { draw2.setFillColor(fg1, fg1, fg1, alpha); } else { draw2.setFillColor(bg, bg, bg, alpha); }\n        draw2.fillCircle(this.x0, this.y0, RadialMenu.radiusOfNeutralZone);\n        if (!this.isItemHilited(RadialMenu.CENTRAL_ITEM)) { draw2.setStrokeColor(fg1, fg1, fg1); } else { draw2.setStrokeColor(bg, bg, bg); }\n        draw2.drawCircle(this.x0, this.y0, RadialMenu.radiusOfNeutralZone);\n\n\n        /*\n\t\t\tBelow we have the upper right quadrant of the radial menu.\n\t\t\t\t+---------+              \\\n\t\t\t\t| item 1  |               ) heightOfItems\n\t\t\t\t+---------+              /\n\t\t\t\t     .                    ) marginBetweenItems\n\t\t\t\t     . +---------+       \\\n\t\t\t\t     . | item 2  |        ) heightOfItems\n\t\t\t\t     . +---------+       /\n\t\t\t\t     . .                  ) marginBetweenItems\n\t\t\t\t     ..     +---------+  \\\n\t\t\t\t     o......| item 3  |   ) heightOfItems\n\t\t\t\t            +---------+  /\n\t\t\tLet r be the distance from the menu's center \"o\" to the center of item 1,\n\t\t\tand also the distance from \"o\" to the center of item 3.\n\t\t\tFrom the picture, we have\n\t\t\t\tr == heightOfItems / 2 + marginBetweenItems + heightOfItems\n\t\t\t\t     + marginBetweenItems + heightOfItems / 2\n\t\t\t\t  == 2 * ( heightOfItems + marginBetweenItems )\n\t\t\tLet r' be the distance from \"o\" to the center of item 2.\n\t\t\tThis distance is measured along a line that slopes at 45 degrees.\n\t\t\tHence\n\t\t\t\tr'/sqrt(2) == heightOfItems / 2 + marginBetweenItems\n\t\t\t\t              + heightOfItems / 2\n\t\t\t\tr' == sqrt(2) * ( heightOfItems + marginBetweenItems )\n\t\t\t\t   == r / sqrt(2)\n\t\t*/\n        const heightOfItem = RadialMenu.textHeight + 2 * RadialMenu.marginAroundText;\n        const radius = 2 * (heightOfItem + RadialMenu.marginBetweenItems);\n        const radiusPrime = radius / Math.SQRT2;\n\n        for (let i = 1; i <= N; ++i) {\n            if (this.label[i].length > 0 && this.isEnabled[i]) {\n                const theta = (i - 1) * Math.PI / 4 - Math.PI / 2;\n                // compute center of ith label\n                let x = ((i % 2) === 1 ? radius : radiusPrime) * Math.cos(theta) + this.x0;\n                let y = ((i % 2) === 1 ? radius : radiusPrime) * Math.sin(theta) + this.y0;\n\n                if (i === 1 && this.label[2].length === 0 && this.label[8].length === 0) {\n                    y = -radius / 2 + this.y0;\n                } else if (i === 5 && this.label[4].length === 0 && this.label[6].length === 0) {\n                    y = radius / 2 + this.y0;\n                }\n\n                const stringWidth = draw2.stringWidth(this.label[i]);\n                let widthOfItem = stringWidth + 2 * RadialMenu.marginAroundText;\n\n                // We want items that appear side-by-side to have the same width,\n                // so that the menu is symmetrical about a vertical axis.\n                if (i !== 1 && i !== 5 && this.label[N + 2 - i].length > 0) {\n                    const otherStringWidth = draw2.stringWidth(this.label[N + 2 - i]);\n                    if (otherStringWidth > stringWidth) { widthOfItem = otherStringWidth + 2 * RadialMenu.marginAroundText; }\n                }\n\n                if (i === 2 || i === 4) {\n                    if (x - widthOfItem / 2 <= this.x0 + RadialMenu.marginBetweenItems)\n                    // item is too far to the left; shift it to the right\n                    { x = this.x0 + RadialMenu.marginBetweenItems + widthOfItem / 2; }\n                } else if (i === 3) {\n                    if (x - widthOfItem / 2 <= this.x0 + RadialMenu.radiusOfNeutralZone + RadialMenu.marginBetweenItems)\n                    // item is too far to the left; shift it to the right\n                    { x = this.x0 + RadialMenu.radiusOfNeutralZone + RadialMenu.marginBetweenItems + widthOfItem / 2; }\n                } else if (i === 6 || i === 8) {\n                    if (x + widthOfItem / 2 >= this.x0 - RadialMenu.marginBetweenItems)\n                    // item is too far to the right; shift it to the left\n                    { x = this.x0 - RadialMenu.marginBetweenItems - widthOfItem / 2; }\n                } else if (i === 7) {\n                    if (x + widthOfItem / 2 >= this.x0 - RadialMenu.radiusOfNeutralZone - RadialMenu.marginBetweenItems)\n                    // item is too far to the right; shift it to the left\n                    { x = this.x0 - RadialMenu.radiusOfNeutralZone - RadialMenu.marginBetweenItems - widthOfItem / 2; }\n                }\n\n                if (this.isItemHilited(i)) { draw2.setFillColor(fg1, fg1, fg1, alpha); } else { draw2.setFillColor(bg, bg, bg, alpha); }\n                draw2.fillRect(\n                    x - widthOfItem / 2, y - heightOfItem / 2,\n                    widthOfItem, heightOfItem\n                );\n                if (!this.isItemHilited(i)) {\n                    draw2.setStrokeColor(fg1, fg1, fg1);\n                    draw2.setFillColor(fg1, fg1, fg1);\n                } else {\n                    draw2.setStrokeColor(bg, bg, bg);\n                    draw2.setFillColor(bg, bg, bg);\n                }\n                draw2.drawRect(\n                    x - widthOfItem / 2, y - heightOfItem / 2,\n                    widthOfItem, heightOfItem\n                );\n                draw2.drawString(\n                    x - stringWidth / 2,\n                    y + RadialMenu.textHeight / 2,\n                    this.label[i]\n                );\n            }\n        }\n    },\n\n    draw(draw2) {\n        if (!this.isVisible) { return; }\n        this.drawMenuItems(draw2, false, false, 0);\n    }\n\n};\n\n// ============================================================\n// A control menu.\n// To create a new instance, use the new keyword:\n//    var cm = new ControlMenu();\n// ============================================================\n\nfunction ControlMenu() {\n    // During drag events, when this is false,\n    // we are in parameter-control mode,\n    // and the drag events should be interpreted by the client\n    // to control the parameter that was selected by the user.\n    this.isInMenuingMode = false;\n}\nControlMenu.prototype = new RadialMenu();\nControlMenu.prototype.pressEvent = function (x, y) {\n    this.isInMenuingMode = true;\n    return RadialMenu.prototype.pressEvent.call(this, x, y);\n};\nControlMenu.prototype.dragEvent = function (x, y) {\n    if (!this.isVisible) { return false; }\n    if (this.isInMenuingMode) {\n        const returnValue = RadialMenu.prototype.dragEvent.call(this, x, y);\n        const distanceSquared = new Vector2D(x - this.x0, y - this.y0).normSquared();\n        if (distanceSquared > ControlMenu.menuRadius * ControlMenu.menuRadius) {\n            // It is time to transition from menuing mode to parameter-control mode.\n            this.isInMenuingMode = false;\n            return true;\n        }\n        return returnValue;\n    }\n    // The widget is not in menuing mode, it is in parameter-control mode,\n    // and the client is supposed to process the event.\n    return false;\n};\nControlMenu.prototype.draw = function (draw2) {\n    if (!this.isVisible) { return; }\n    this.drawMenuItems(draw2, this.isInMenuingMode, true, ControlMenu.menuRadius);\n};\n\n// static constant\nControlMenu.menuRadius = RadialMenu.radiusOfNeutralZone * 6;\n\n// ============================================================\n// Stroke objects are for storing a continuous polygonal line of ink.\n// It is made up of points in world space.\n// To create a new instance, use the new keyword:\n//    var s = new Stroke();\n// ============================================================\n\nfunction Stroke() {\n    this.points = []; // these points are in world space\n\n    this.boundingRectangle = new Box2();\n    this.isBoundingRectangleDirty = true;\n}\nStroke.prototype = {\n    pushPoint(q) {\n        this.points.push(q);\n        this.isBoundingRectangleDirty = true;\n    },\n    getBoundingRectangle() {\n        if (this.isBoundingRectangleDirty) {\n            this.boundingRectangle.clear();\n            this.boundingRectangle.boundPoints(this.points);\n            this.isBoundingRectangleDirty = false;\n        }\n        return this.boundingRectangle;\n    },\n    isContainedInRectangle(rectangle /* an instance of Box2 */) {\n        return rectangle.containsBox(this.getBoundingRectangle());\n    },\n    isContainedInLassoPolygon(polygonPoints /* an array of Vector2D in world space */) {\n        for (let i = 0; i < this.points.length; ++i) {\n            if (!Vector2D.isPointInsidePolygon(this.points[i], polygonPoints)) { return false; }\n        }\n        return true;\n    },\n    translate(v /* an instance of Vector2D */) {\n        for (let i = 0; i < this.points.length; ++i) {\n            const p = this.points[i];\n            p.copy(Vector2D.sum(p, v));\n        }\n        this.isBoundingRectangleDirty = true;\n    },\n    rotate(angle /* in radians */, center /* instance of Vector2D, in world space */) {\n        const sine = Math.sin(angle);\n        const cosine = Math.cos(angle);\n        for (let i = 0; i < this.points.length; ++i) {\n            const p = this.points[i];\n            const delta_x = p.x - center.x;\n            const delta_y = p.y - center.y;\n            const new_x = center.x + delta_x * cosine - delta_y * sine;\n            const new_y = center.y + delta_x * sine + delta_y * cosine;\n            p.x = new_x;\n            p.y = new_y;\n        }\n        this.isBoundingRectangleDirty = true;\n    },\n    draw(draw2) {\n        draw2.drawPolyline(this.points);\n    }\n};\n\n// ============================================================\n// Drawing objects are for storing a set of Strokes.\n// To create a new instance, use the new keyword:\n//    var d = new Drawing();\n// ============================================================\n\nfunction Drawing() {\n    this.strokes = [];\n\n    this.boundingRectangle = new Box2();\n    this.isBoundingRectangleDirty = true;\n}\nDrawing.prototype = {\n    pushStroke(s) {\n        this.strokes.push(s);\n        this.isBoundingRectangleDirty = true;\n    },\n    clear() {\n        this.strokes = [];\n        this.boundingRectangle.clear();\n    },\n    getBoundingRectangle() {\n        if (this.isBoundingRectangleDirty) {\n            this.boundingRectangle.clear();\n            for (let i = 0; i < this.strokes.length; ++i) {\n                const s = this.strokes[i];\n                this.boundingRectangle.boundBox(s.getBoundingRectangle());\n            }\n            this.isBoundingRectangleDirty = false;\n        }\n        return this.boundingRectangle;\n    },\n\n    draw(draw2) {\n        // draw2.setLineWidth( 5 );\n        for (let i = 0; i < this.strokes.length; ++i) {\n            const s = this.strokes[i];\n            s.draw(draw2);\n        }\n        // draw2.setLineWidth( 1 );\n    }\n};\n\n// ============================================================\n\nconst canvas = document.getElementById('myCanvas');\n// var canvas_context = canvas.getContext(\"2d\");\nconst draw2 = new Draw2(canvas);\nconst drawing = new Drawing();\n\nconst radialMenu = new RadialMenu();\nconst controlMenu = new ControlMenu();\n\n// stores a subset of the strokes\nlet selectedStrokes = []; // an array of instances of Stroke\n\nlet mouse_x,\n    mouse_y,\n    previous_mouse_x,\n    previous_mouse_y,\n    drag_start_x,\n    drag_start_y;\nlet mouseHistory = []; // array of Vector2D in pixel space\n\nconst zoomFactorPerPixelDragged = 1.005;\n\nconst showMouseCoordinates = false;\n\n// The below tool modes are constants,\n// but are defined using var instead of const\n// so that they will be accessible in the definitions\n// of the input tags at the top of this file\n// (bug fix for the Edge web browser)\nconst TOOL_MODE_PENCIL = 0;\nconst TOOL_MODE_RECT_SELECT = 1;\nconst TOOL_MODE_MOVE_SELECTION = 2;\nconst NUM_TOOL_MODES = 3;\nlet currentToolMode = TOOL_MODE_PENCIL;\n\nconst DRAG_MODE_NONE = 0;\nconst DRAG_MODE_TRANSLATE = 1;\nconst DRAG_MODE_ZOOM = 2;\nconst DRAG_MODE_TOOL = 3; // in this case, the currentToolMode could be pencil, rect_select, move_selection\nlet currentDragMode = DRAG_MODE_NONE;\n\nconst CONTROL_NONE = 0;\nconst CONTROL_PENCIL = 1;\nconst CONTROL_RECT_SELECT = 2;\nconst CONTROL_MOVE_SELECTION = 3;\nconst CONTROL_TRANSLATE = 4;\nconst CONTROL_ZOOM = 5;\n\nradialMenu.setItemLabelAndID(RadialMenu.CENTRAL_ITEM, '', -1);\nradialMenu.setItemLabelAndID(RadialMenu.NORTH, 'Pencil', TOOL_MODE_PENCIL);\nradialMenu.setItemLabelAndID(RadialMenu.EAST, 'Rectangle Select', TOOL_MODE_RECT_SELECT);\nradialMenu.setItemLabelAndID(RadialMenu.WEST, 'Move Selection', TOOL_MODE_MOVE_SELECTION);\n\ncontrolMenu.setItemLabelAndID(RadialMenu.CENTRAL_ITEM, '', -1);\ncontrolMenu.setItemLabelAndID(RadialMenu.NORTH, 'Pencil', CONTROL_PENCIL);\ncontrolMenu.setItemLabelAndID(RadialMenu.EAST, 'Rectangle Select', CONTROL_RECT_SELECT);\ncontrolMenu.setItemLabelAndID(RadialMenu.WEST, 'Move Selection', CONTROL_MOVE_SELECTION);\ncontrolMenu.setItemLabelAndID(RadialMenu.SOUTH_EAST, 'Translate', CONTROL_TRANSLATE);\ncontrolMenu.setItemLabelAndID(RadialMenu.SOUTH_WEST, 'Zoom', CONTROL_ZOOM);\n\n\nconst redraw = function () {\n    draw2.setFontHeight(RadialMenu.textHeight);\n    draw2.clear(255, 255, 255);\n    draw2.setCoordinateSystemToWorldSpaceUnits();\n    draw2.setFillColor(255, 128, 0, 0.3); // transparent orange\n    // draw filled rectangles over the selected strokes\n    for (let i = 0; i < selectedStrokes.length; ++i) {\n        const s = selectedStrokes[i];\n        const r = s.getBoundingRectangle();\n        draw2.fillRect(r.min.x, r.min.y, r.width(), r.height());\n    }\n\n    draw2.setStrokeColor(0, 0, 0); // black\n    drawing.draw(draw2);\n\n    draw2.setCoordinateSystemToPixels();\n\n    if (currentDragMode == DRAG_MODE_TOOL) {\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                draw2.setStrokeColor(0, 0, 0); // black\n                draw2.drawPolyline(mouseHistory);\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                draw2.setFillColor(255, 128, 0, 0.3); // transparent orange\n                draw2.fillRect(drag_start_x, drag_start_y, mouse_x - drag_start_x, mouse_y - drag_start_y);\n                draw2.setStrokeColor(255, 0, 0); // red\n                draw2.drawRect(drag_start_x, drag_start_y, mouse_x - drag_start_x, mouse_y - drag_start_y);\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                break;\n        }\n    }\n\n    if (radialMenu.isVisible) { radialMenu.draw(draw2); }\n    if (controlMenu.isVisible) { controlMenu.draw(draw2); }\n\n    if (showMouseCoordinates) {\n        draw2.setFillColor(0, 0, 0);\n        const x_world = draw2.convertPixelsToWorldSpaceUnitsX(mouse_x);\n        const y_world = draw2.convertPixelsToWorldSpaceUnitsY(mouse_y);\n        draw2.drawString(20, canvas.height - 20, `pixels:(${mouse_x}, ${mouse_y})   world:(${parseFloat(x_world).toFixed(2)}, ${parseFloat(y_world).toFixed(2)})`);\n    }\n};\n\nredraw();\n\n// for use with MouseEvent.button\nconst BUTTON_LEFT = 0;\nconst BUTTON_MIDDLE = 1;\nconst BUTTON_RIGHT = 2;\n// for use with MouseEvent.buttons\nconst BUTTONS_BIT_LEFT = 1;\nconst BUTTONS_BIT_MIDDLE = 4;\nconst BUTTONS_BIT_RIGHT = 2;\n\n\nfunction mouseDownHandler(e) {\n    const canvas_rectangle = canvas.getBoundingClientRect();\n    mouse_x = e.clientX - canvas_rectangle.left;\n    mouse_y = e.clientY - canvas_rectangle.top;\n    // console.log(\"mouse down\");\n    // console.log(\"   \" + mouse_x + \",\" + mouse_y);\n\n    if (currentDragMode !== DRAG_MODE_NONE)\n    // The user is already dragging with a previously pressed button,\n    // so ignore the press event from this new button.\n    { return; }\n\n    drag_start_x = previous_mouse_x = mouse_x;\n    drag_start_y = previous_mouse_y = mouse_y;\n\n    if (controlMenu.isVisible || (e.button === BUTTON_RIGHT && e.shiftKey)) {\n        if (controlMenu.pressEvent(mouse_x, mouse_y)) { redraw(); }\n    } else if (radialMenu.isVisible || (e.button === BUTTON_RIGHT)) {\n        if (radialMenu.pressEvent(mouse_x, mouse_y)) { redraw(); }\n    } else if (e.button === BUTTON_LEFT && e.shiftKey) {\n        currentDragMode = DRAG_MODE_TRANSLATE;\n    } else if (e.button === BUTTON_LEFT && e.ctrlKey) {\n        currentDragMode = DRAG_MODE_ZOOM;\n    } else if (e.button === BUTTON_LEFT) {\n        mouseHistory = [];\n        mouseHistory.push(new Vector2D(mouse_x, mouse_y));\n        currentDragMode = DRAG_MODE_TOOL;\n    }\n}\n\nfunction mouseUpHandler(e) {\n    let i;\n    // var canvas_rectangle = canvas.getBoundingClientRect();\n    // mouse_x = e.clientX - canvas_rectangle.left;\n    // mouse_y = e.clientY - canvas_rectangle.top;\n    // console.log(\"mouse up\");\n    if (controlMenu.isVisible && e.button === BUTTON_RIGHT) {\n        if (controlMenu.releaseEvent(mouse_x, mouse_y)) { redraw(); }\n    } else if (radialMenu.isVisible && e.button === BUTTON_RIGHT) {\n        const returnValue = radialMenu.releaseEvent(mouse_x, mouse_y);\n\n        const itemID = radialMenu.getIDOfSelection();\n        if (itemID >= 0 && itemID < NUM_TOOL_MODES) {\n            setToolMode(itemID, true);\n        }\n\n        if (returnValue) { redraw(); }\n    } else if (currentDragMode == DRAG_MODE_TRANSLATE && e.button === BUTTON_LEFT) {\n        currentDragMode = DRAG_MODE_NONE;\n    } else if (currentDragMode == DRAG_MODE_ZOOM && e.button === BUTTON_LEFT) {\n        currentDragMode = DRAG_MODE_NONE;\n    } else if (currentDragMode == DRAG_MODE_TOOL && e.button === BUTTON_LEFT) {\n        let newStroke;\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                newStroke = new Stroke();\n                for (i = 0; i < mouseHistory.length; ++i) {\n                    newStroke.pushPoint(draw2.convertPixelsToWorldSpaceUnits(mouseHistory[i]));\n                }\n                drawing.pushStroke(newStroke);\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                // complete a rectangle selection\n                var selectedRectangle = new Box2(\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(drag_start_x, drag_start_y)),\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouse_x, mouse_y))\n                );\n                selectedStrokes = [];\n                for (i = 0; i < drawing.strokes.length; ++i) {\n                    const s = drawing.strokes[i];\n                    if (s.isContainedInRectangle(selectedRectangle)) { selectedStrokes.push(s); }\n                }\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                break;\n        }\n        currentDragMode = DRAG_MODE_NONE;\n        redraw();\n    }\n}\n\nfunction mouseMoveHandler(e) {\n    previous_mouse_x = mouse_x;\n    previous_mouse_y = mouse_y;\n    const canvas_rectangle = canvas.getBoundingClientRect();\n    mouse_x = e.clientX - canvas_rectangle.left;\n    mouse_y = e.clientY - canvas_rectangle.top;\n\n\n    const delta_x = mouse_x - previous_mouse_x;\n    const delta_y = mouse_y - previous_mouse_y;\n\n\n    if (controlMenu.isVisible) {\n        if (controlMenu.isInMenuingMode) {\n            if (controlMenu.dragEvent(mouse_x, mouse_y)) { redraw(); }\n        } else {\n            // use the drag event to change the appropriate parameter\n            switch (controlMenu.getIDOfSelection()) {\n                case CONTROL_PENCIL:\n                    break;\n                case CONTROL_RECT_SELECT:\n                    break;\n                case CONTROL_MOVE_SELECTION:\n                    var v = Vector2D.diff(\n                        draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouse_x, mouse_y)),\n                        draw2.convertPixelsToWorldSpaceUnits(new Vector2D(previous_mouse_x, previous_mouse_y))\n                    );\n                    for (var i = 0; i < selectedStrokes.length; ++i) {\n                        selectedStrokes[i].translate(v);\n                    }\n                    drawing.isBoundingRectangleDirty = true;\n                    break;\n                case CONTROL_TRANSLATE:\n                    draw2.translate(delta_x, delta_y);\n                    break;\n                case CONTROL_ZOOM:\n                    draw2.zoomIn(Math.pow(zoomFactorPerPixelDragged, delta_x - delta_y), drag_start_x, drag_start_y);\n                    break;\n            }\n            redraw();\n        }\n    } else if (radialMenu.isVisible) {\n        if (radialMenu.dragEvent(mouse_x, mouse_y)) { redraw(); }\n    } else if (currentDragMode == DRAG_MODE_TRANSLATE) {\n        draw2.translate(delta_x, delta_y);\n        redraw();\n    } else if (currentDragMode == DRAG_MODE_ZOOM) {\n        draw2.zoomIn(Math.pow(zoomFactorPerPixelDragged, delta_x - delta_y), drag_start_x, drag_start_y);\n        redraw();\n    } else if (currentDragMode == DRAG_MODE_TOOL) {\n        switch (currentToolMode) {\n            case TOOL_MODE_PENCIL:\n                mouseHistory.push(new Vector2D(mouse_x, mouse_y));\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                var v = Vector2D.diff(\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(mouse_x, mouse_y)),\n                    draw2.convertPixelsToWorldSpaceUnits(new Vector2D(previous_mouse_x, previous_mouse_y))\n                );\n                for (var i = 0; i < selectedStrokes.length; ++i) {\n                    selectedStrokes[i].translate(v);\n                }\n                drawing.isBoundingRectangleDirty = true;\n                break;\n        }\n        redraw();\n    } else if (showMouseCoordinates) {\n        redraw();\n    }\n}\n\ncanvas.addEventListener('mousedown', mouseDownHandler);\ncanvas.addEventListener('mouseup', mouseUpHandler);\ncanvas.addEventListener('mousemove', mouseMoveHandler);\ncanvas.oncontextmenu = function (e) { return false; }; // disable the right-click menu\n\n\nfunction setToolMode(toolMode, updateRadioButtons = false) {\n    currentToolMode = toolMode;\n    mouseHistory = [];\n    if (updateRadioButtons) {\n        let idString = 'null';\n        switch (toolMode) {\n            case TOOL_MODE_PENCIL:\n                idString = 'TOOL_MODE_PENCIL';\n                break;\n            case TOOL_MODE_RECT_SELECT:\n                idString = 'TOOL_MODE_RECT_SELECT';\n                break;\n            case TOOL_MODE_MOVE_SELECTION:\n                idString = 'TOOL_MODE_MOVE_SELECTION';\n                break;\n        }\n        document.getElementById(idString).checked = true;\n    }\n}\n\nfunction frameAllButtonHandler() {\n    draw2.frame(drawing.getBoundingRectangle(), true);\n    redraw();\n}\n\nfunction deleteSelectionButtonHandler() {\n    for (let i = selectedStrokes.length - 1; i >= 0; --i) {\n        const j = drawing.strokes.indexOf(selectedStrokes[i]);\n        if (j >= 0)\n        // this should really be moved into a method in the Drawing prototype\n        { drawing.strokes.splice(j, 1); }\n    }\n    selectedStrokes = [];\n    drawing.isBoundingRectangleDirty = true;\n\n    redraw();\n}\nfunction deleteAllButtonHandler() {\n    selectedStrokes = [];\n    // this should really be moved into a method in the Drawing prototype\n    drawing.strokes = [];\n    drawing.isBoundingRectangleDirty = true;\n\n    redraw();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","class Vector2D {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    copy(other) {\n        this.x = other.x;\n        this.y = other.y;\n    }\n\n    negate() {\n        return new Vector2D(-this.x, -this.y);\n    }\n\n    norm() {\n        return Math.sqrt(this.normSquared());\n    }\n\n    normSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    normalize() {\n        const norm = this.norm();\n        if (norm) {\n            const k = 1.0 / norm;\n            return new Vector2D(k * this.x, k * this.y);\n        }\n        return new Vector2D();\n    }\n\n    static sum(vector1, vector2) {\n        return new Vector2D(vector1.x + vector2.x, vector1.y + vector2.y);\n    }\n\n    static diff(vector1, vector2) {\n        return new Vector2D(vector1.x - vector2.x, vector1.y - vector2.y);\n    }\n\n    static multiply(vector, factor) {\n        return new Vector2D(vector.x * factor, vector.y * factor);\n    }\n\n    static dot(vector1, vector2) {\n        return vector1.x * vector2.x + vector1.y * vector2.y;\n    }\n\n    static average(vector1, vector2) {\n        return new Vector2D((vector1.x + vector2.x) * 0.5, (vector1.y + vector2.y) * 0.5);\n    }\n\n    static centroidOfPoints(points) {\n        const { x: centerX, y: centerY } = points.reduce((centroid, point) => Object.assign({\n            x: centroid.x + point.x,\n            y: centroid.y + point.y\n        }), { x: 0, y: 0 });\n        return new Vector2D(\n            points.length ? centerX / points.length : centerX,\n            points.length ? centerY / points.length : centerY\n        );\n    }\n\n    static isPointInsidePolygon(queryPoint, polygon) {\n        if (polygon.length < 3) {\n            return false;\n        }\n\n        let returnValue = false;\n\n        polygon.forEach((cursorPoint, i) => {\n            const previousPoint = polygon[(i || polygon.length) - 1];\n\n            if (\n                (\n                    (\n                        cursorPoint.y < queryPoint.y &&\n                        queryPoint.y < previousPoint.y\n                    ) ||\n                    (\n                        previousPoint.y <= queryPoint.y &&\n                        queryPoint.y < cursorPoint.y\n                    )\n                ) &&\n                queryPoint.x < (\n                    (previousPoint.x - cursorPoint.x) *\n                    (queryPoint.y - cursorPoint.i) /\n                    (previousPoint.y - cursorPoint.y) +\n                    cursorPoint.x\n                )\n            ) {\n                returnValue = !returnValue;\n            }\n        });\n\n        return returnValue;\n    }\n\n    static convexHull(input) {\n        const cross = (o, a, b) =>\n            (a.x - o.x) *\n            (b.y - o.y) -\n            (a.y - o.y) *\n            (b.y - o.x);\n\n        const points = [...input];\n\n        points.sort((a, b) => (a.x === b.x ? a.y - b.y : a.x - b.x));\n\n        const lower = points.reduce((lowerInProgress, point) => {\n            while (\n                lowerInProgress.length >= 2 &&\n                cross(\n                    lowerInProgress[lowerInProgress.length - 2],\n                    lowerInProgress[lowerInProgress.length - 1],\n                    point\n                ) <= 0\n            ) {\n                lowerInProgress.pop();\n            }\n            return [...lowerInProgress, point];\n        }, []);\n\n        const upper = points.reduce((upperInProgress, point) => {\n            while (\n                upperInProgress.length >= 2 &&\n                cross(\n                    upperInProgress[upperInProgress.length - 2],\n                    upperInProgress[upperInProgress.length - 1],\n                    point\n                ) <= 0) {\n                upperInProgress.pop();\n            }\n            return [...upperInProgress, point];\n        }, []);\n\n        upper.pop();\n        lower.pop();\n\n        return [...lower, ...upper];\n    }\n\n    static computeExpandedPolygon(inputPoints, marginThickness) {\n        if (!inputPoints.length) {\n            return [];\n        } else if (inputPoints.length === 1) {\n            return Vector2D.computeExpandedPolygonForOnePoint(inputPoints[0], marginThickness);\n        } else if (inputPoints.length === 2) {\n            return Vector2D.computeExpandedPolygonForTwoPoint(inputPoints, marginThickness);\n        }\n        return Vector2D.computeExpandedPolygonForMultiPoints(inputPoints, marginThickness);\n    }\n\n    static computeExpandedPolygonForOnePoint(point, marginThickness) {\n        return [\n            new Vector2D(point.x - marginThickness, point.y),\n            new Vector2D(point.x, point.y - marginThickness),\n            new Vector2D(point.x + marginThickness, point.y),\n            new Vector2D(point.x, point.y + marginThickness)\n        ];\n    }\n\n    static computeExpandedPolygonForTwoPoint([point0, point1], marginThickness) {\n        const vector0 = Vector2D.multiply(\n            Vector2D.diff(point0, point1).normalize(),\n            marginThickness\n        );\n\n        const vector1 = new Vector2D(-vector0.y, vector0.x);\n\n        return [\n            Vector2D.sum(point0, vector1),\n            Vector2D.sum(point0, vector0.negate()),\n            Vector2D.sum(point0, vector1.negate()),\n            Vector2D.sum(point1, vector1.negate()),\n            Vector2D.sum(point1, vector0),\n            Vector2D.sum(point1, vector1)\n        ];\n    }\n\n    static computeExpandedPolygonForMultiPoints(points, marginThickness) {\n        return points.reduce((expandedPolygon, cursorPoint, i) => {\n            const previousPoint = points[(i || points.length) - 1];\n            const nextPoint = points[(i + 1) % points.length];\n            const previousVector = Vector2D.diff(cursorPoint, previousPoint).normalize();\n            const nextVector = Vector2D.diff(cursorPoint, nextPoint).normalize();\n\n            return [\n                ...expandedPolygon,\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply([\n                        previousVector.y,\n                        -previousVector.x\n                    ], marginThickness)\n                ),\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply(Vector2D.sum(\n                        nextVector,\n                        previousVector\n                    ).normalize(), marginThickness)\n                ),\n                Vector2D.sum(\n                    cursorPoint,\n                    Vector2D.multiply([\n                        -nextVector.y,\n                        nextVector.x\n                    ], marginThickness)\n                )\n            ];\n        }, []);\n    }\n}\n\nexport default Vector2D;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Vector2D.js"],"sourceRoot":""}